<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<script>
var ua = navigator.userAgent.toLowerCase();
if(ua.match(/MicroMessenger/i)=="micromessenger") {
    location.href='http://blog.chinaunix.net/article.php?url='+ window.location.href;
}
</script>
        <style>
    .Blog_nav1_2 a em { display:inline-block; width:16px; height:13px; background:url(/image/v.jpg) no-repeat; overflow:hidden;}
</style>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="stylesheet" type="text/css" href="/css/default/style.css" />
<link rel="stylesheet" type="text/css" href="/css/qqface/qqFace.css" />
<link rel="stylesheet" type="text/css" href="/css/asyncbox/skins/Chrome/asyncbox.css" />
<link rel="stylesheet" type="text/css" href="/assets/6d60aeb8/pager.css" />
<script type="text/javascript" src="/js/jquery.min.js"></script>
<script type="text/javascript" src="/js/jquery.cookies.min.js"></script>
<script type="text/javascript" src="/js/AsyncBox.v1.4.5.js"></script>
<title>C语言实现继承和多态-liujunwei1234-ChinaUnix博客</title>
<meta name="description" content='
继承和多态是面向对象语言最强大的功能。有了继承和多态，我们可以完成代码重用。在C中有许多技巧可以实现多态。本文的目的就是演示一种简单和容易的技术，在C中应用继承和多态。通过创建一个VTable（virtual table）和在基类和派生'/>
<script type='text/javascript' src='http://168.it168.com/a/h600.js'></script>

<script type="text/javascript">
if(/AppleWebKit.*Mobile/i.test(navigator.userAgent) || (/MIDP|SymbianOS|NOKIA|SAMSUNG|LG|NEC|TCL|Alcatel|BIRD|DBTEL|Dopod|PHILIPS|HAIER|LENOVO|MOT-|Nokia|SonyEricsson|SIE-|Amoi|ZTE/.test(navigator.userAgent))){
	try{
		if(!/iPad/i.test(navigator.userAgent)){
			var oldurl=window.location.href;
			var wapUrl= oldurl.replace('blog.chinaunix.net', "m.blog.chinaunix.net") ;
			window.location.href = wapUrl;
		}
	}catch(e){}
}
</script>


<script language="javascript">
//用户是否在线
var isOnLine = '';
$(document).ready(function(){
	var blog = {'name': '', 'name_url': '', 'brief': ''};
	//消息通知显示和隐藏控制
	$('#show_message_slide_button').hover(
		function(){
			$('#message_slide_div').slideDown(100);											   
		},
		function(){
			
		}
	);

	$('#message_slide_div').hover(
		function(){
			
		},
		function(){
			$('#message_slide_div').slideUp(100);
		}
	);
	
	//编辑博客名
	$('#editbna').click(function(){
		blog.name = $('#bnaspan a').text();
		var val = '<input id="bnainput" type="text" style="float:left" value="" rel="' +$(this).attr('rel') + '" /><input id="bnasub" type="button" style="float:left" class="btn1"><input id="bnacanl" type="button" style="float:left" class="btn2"><div class="clear"></div>';
		$('#bnaspan').html(val);
		$('#bnainput').val(blog.name);
		$(this).parent().hide();
	});
	
	$('#bnasub').live('click', function(){
	    var rel = eval('({' + $('#bnainput').attr('rel') + '})');
		var name = $('#bnainput').val();
		if(name != blog.name){
	        $.ajax({
			    type: "POST",
			    url: rel.url,	
			    data: {
				    'name' : name
			    },
			    success:function(data){
				    if(data == 0){
						$('#bnaspan').html(blog.name);
						$('#bnaspan').html('<a href="' + rel.href + '">' + $('#bnaspan').html() + '</a>');
				    }else if(data == -1){
                                        showErrorMsg('名称中含有违禁词，请从新编辑!', '消息提示');
                                    }else{
						$('#bnaspan').html(data);
						$('#bnaspan').html('<a href="' + rel.href + '">' + $('#bnaspan').html() + '</a>');
				    }
					$('#editbna').parent().show();
				}
			});
		}else{
		    $('#bnaspan').text(blog.name).html();
			$('#bnaspan').html('<a href="' + rel.href + '">' + $('#bnaspan').html() + '</a>');
			$('#editbna').parent().show();
		}
	});
	
	$('#bnacanl').live('click', function(){
		var rel = eval('({' + $('#bnainput').attr('rel') + '})');
		$('#bnaspan').html('<a href="' + rel.href + '">' + blog.name + '</a>');
		$('#editbna').parent().show();
	});
	
	//编辑签名
	$('#editbrief').click(function(){
	    blog.brief = $('#briefem').text();
		var val = '<input id="brfinput" type="text" style="float:left" value="" rel="' + $(this).attr('rel') + '" /><input id="brfsub" style="float:left"  type="button" class="btn1"><input style="float:left"  id="brfcanl" type="button" class="btn2"><div class="clear"></div>';
		$('#briefem').html(val);
		$('#brfinput').val(blog.brief);
		$(this).parent().hide();
	});
	
	$('#brfsub').live('click', function(){
	    var url = $('#brfinput').attr('rel');
		var brief = $('#brfinput').val();
		if(brief != blog.brief){
	        $.ajax({
			    type: "POST",
			    url: url,	
			    data: {
				    'brief' : brief
			    },
			    success:function(data){
				    if(data == 0){
				        $('#briefem').html(blog.brief);
				    }else if(data == -1){
                                        showErrorMsg('签名中含有违禁词，请从新编辑!', '消息提示');
                                    }else{
						$('#briefem').html(data);
				    }
					$('#editbrief').parent().show();
				}
			});
		}else{
		    $('#briefem').text(blog.brief).html();
			$('#editbrief').parent().show();
		}
	});
	
	$('#brfcanl').live('click', function(){
		$('#briefem').html(blog.brief);
		$('#editbrief').parent().show();
	});

});
</script>
</head>
<body>
<div class="box">
  <!-- 一级导航 -->
  <div class="Blog_nav1">
    <div class="Blog_nav1_2"><a href="/"><img src="/image/default/1.png"></a><a href="http://www.chinaunix.net" class="Blog_a1">Chinaunix首页</a> | <a href="http://bbs.chinaunix.net" target="_blank">论坛</a> | <a href="http://u.it168.com/vip/"><font color="red">认证专区</font></a> | <a href="http://blog.chinaunix.net" target="_blank">博客</a><span class="Blog_span1"></span>
              <a href="/site/login.html" class="Blog_a1" onclick="linkto()">登录</a> | <a href="http://u.it168.com/Register?webid=5&returnUrl=http%3A%2F%2Fblog.chinaunix.net%2Fuid-20940095-id-66146.html" class="Blog_a1">注册</a>
          </div>
	<!--自动提示层-->
	<style>
	.bor13221{border:1px #bbb solid;width:206px;position:absolute;top:34px;left:0;background:#fff; z-index:9999;display:none}
	.bor13221 li{height:26px;line-height:26px;padding-left:6px;color:#555;font-size:14px;cursor:pointer;}
	.here{background:#f3f3f3;}
    </style>

	<!--自动提示层-->
    <div class="Blog_nav1_3" style="position:relative; z-index:9999;">
	 <div class="bor13221">
      <ul>
      </ul>
    </div>
	  <form action='/site/search.html' method='post'>
		<input type="text"  autocomplete="off"  class="Blog_txt1" id='search_input_id' name='keywords'>
		<select class="Bolg_sel1" name='type' id='search_type_blog'>
		  <option value='blog'>博文</option>
		  <option value='author'>博主</option>
		</select>
		<input type="submit" value='' name='submit' class="Blog_btn1">
	 </form>
    </div>
    <div class="clear"></div>
    <div class="Blog_nav1_layer1" id="message_slide_div" style="display:none;">
	    <ul>
	    	<li><a href="/message/private.html">私人消息()</a></li>
	    	<li><a href="/message/system.html">系统消息()</a></li>
	    	<li><a href="/member/request.html">好友请求()</a></li>
	    	<li><a href="/member/notification.html">通知管理()</a></li>
	    </ul>
    </div>
  </div>
   <script type="text/javascript">
  	$(function(){
		//点击添加进文本框
		$(".bor13221 li").live( 'click' , function(e){
			if ( e && e.stopPropagation )
			{
				//因此它支持W3C的stopPropagation()方法
				e.stopPropagation();
			}
			else
			{
				//否则，我们需要使用IE的方式来取消事件冒泡
				window.event.cancelBubble = true; 
			}
			$('#search_input_id').val($(this).text());
			$(".bor13221 ul").html('');
			$(".bor13221").hide();
		});
		$(".bor13221 ul li").live({
			mouseenter:
			function()
			{
				$(".bor13221 ul li").removeClass("here");
				$(this).addClass('here');
			},
			mouseleave:
			function()
			{
				$(".bor13221 ul li").removeClass("here");
				$(this).removeClass('here');
			}
		});
		//自动提示
		$('#search_input_id').keyup(function(event){
			//取消博主的提示
			var search_type_blog = $('#search_type_blog').val();
			if(search_type_blog == 'author') return false;

			var key = $(this).val();
			//获取键值
			var keycode = event.which; //38 上 40 下
			var count = $('.bor13221 ul li').length;
			if(key != '' && keycode != 38 && keycode != 40)
			{
				$.getJSON("http://api.sou.it168.com/autoWenKuCloud?jsoncallback=?",{"ty":"json","offset":"0","limit":"10","q":key}, function(result)
					{
						var arr = result.data;

						var html ='';
						for (i=0;i<arr.length ;i++ )   
						{   
							html += '<li>'+arr[i]+'</li>';
						} 
						
						$('.bor13221 ul').html(html);
						(arr.length > 1) ?  $(".bor13221").show() : $(".bor13221").hide();
					}
				);
			}
			else if(keycode == 38)
			{
				if(count > 0)
				{
					//遍历li
					var curr_li_num;
					$('.bor13221 ul li').each(function(index , dom){
						if($(dom).attr('class') == 'here')
						{
							curr_li_num = index;
							return false;
						}
					}); 
					var next_li_num;
					if(typeof(curr_li_num) == 'undefined')
					{
						next_li_num = count - 1;
					}
					else
					{
						if(curr_li_num == 0)
						{
							next_li_num = count - 1;
						}
						else
						{
							next_li_num = curr_li_num - 1;
						}
					}
					$(".bor13221 ul li").removeClass("here");
					$(".bor13221 ul li:eq(" + next_li_num + ")").addClass("here");
					$('#search_input_id').val($(".bor13221 ul li:eq(" + next_li_num + ")").text());
				}
			}
			else if(keycode == 40)
			{
				if(count > 0)
				{
					//遍历li
					var curr_li_num;
					$('.bor13221 ul li').each(function(index , dom){
						if($(dom).attr('class') == 'here')
						{
							curr_li_num = index;
							return false;
						}
					}); 
					var next_li_num;
					if(typeof(curr_li_num) == 'undefined')
					{
						next_li_num = 0;
					}
					else
					{
						if(curr_li_num == count - 1)
						{
							next_li_num = 0;
						}
						else
						{
							next_li_num = curr_li_num + 1;
						}
					}
					$(".bor13221 ul li").removeClass("here");
					$(".bor13221 ul li:eq(" + next_li_num + ")").addClass("here");
					$('#search_input_id').val($(".bor13221 ul li:eq(" + next_li_num + ")").text());
				}
			}
		});
		$(document).click(function(e){
			$(".bor13221").hide();
		});

	});
  </script>
  <!-- 头 -->
  <!-- 推荐博客-->
  <div class="Blog_header1">
	<div class="img1"></div>    <div class="Blog_header1_1">
      <p class="Blog_p1" ><em><a href="/uid/20940095.html">少帅的天空</a></em><a href="http://linuxsky.blog.chinaunix.net">linuxsky.blog.chinaunix.net</a></p>      <p class="Blog_p2" style="color:#125A94">深入理解linux内核&nbsp;深入理解虚拟化&nbsp;深入理解云计算</p>
    </div>
        <div class="Blog_header1_2" id="hide_div1">
    	<span class="Blog_span3"></span>
    	<div class="float_div1" style="white-space:nowrap;" onmouseover="javascript:isMove=false" onmouseout="javascript:isMove=true">
	    <ul id="noticev2">  
		    		    <li><a href="http://blog.chinaunix.net/uid-30204791-id-5705047.html" target="_blank">2016中国数据库技术大会门票申请 </a></li>
		    		    <li><a href="http://blog.chinaunix.net/uid-24789255-id-5568211.html" target="_blank">新注册用户开通“博客写作”功能，需要申请与实名认证 </a></li>
		    		    <li><a href="http://blog.chinaunix.net/uid-10718265-id-5141960.html" target="_blank"> 互动：数据分析与云计算应用案例 （征集|参与）</a></li>
		    	    </ul>
	    </div>
    </div>
            <div class="Blog_header1_3"><a href="/uid/20940095.html">首页</a>　| 　<a href="/uid/20940095/abstract/1.html">博文目录</a>　| 　<a href="/member/profile/uid/20940095.html">关于我</a></div>
  </div>
    
  <!-- 内容部分 -->
  	<script type="text/javascript" src="/highlight/scripts/XRegExp.js"></script> <!-- XRegExp is bundled with the final shCore.js during build -->
<script type="text/javascript" src="/highlight/scripts/shCore.js"></script>
<script type="text/javascript" src="/highlight/scripts/shAutoloader.js"></script>
<link type="text/css" rel="stylesheet" href="/highlight/styles/shCore.css"/>
<link type="text/css" rel="Stylesheet" href="/highlight/styles/shThemeDefault.css" />
<link href="/code/css/fck_editorarea.css" rel="stylesheet" type="text/css" />
<style>
.Blog_p5 em{ display:inline-block; width:16px; height:13px; background:url(/image/v.jpg) no-repeat; overflow:hidden;}
</style>
  <div class="Blog_contain"> 
    <!-- 左 -->
	<style>
    .Blog_left1_1 p a em { display:inline-block; width:16px; height:13px; background:url(/image/v.jpg) no-repeat; overflow:hidden;}
</style>

<script language="javascript">
$(document).ready(function(){
	$('#ConcernBtn').bind('click',function(){
			var cuid = '20940095';
			var url =  '/member/concern.html';
			var type = $(this).attr('rel');
		
			if(type == 'addConcern'){
				$.ajax({
					type : 'get',
					url  : url,
					data : {'op' : 'ajaxadd' , 'cuid' : cuid, 'random' : Math.random()},
					success : function(msg){	
					   if(msg == -1){
						   showErrorMsg('参数错误！');
					   } else if (msg == 0){
						   showErrorMsg('关注失败，没有该用户！');
					   } else if (msg == 1){
						   showErrorMsg('关注失败，您已经关注了该用户！');
					   } else if (msg == 2){
						   $('#ConcernBtn').val('已关注');
						   $('#ConcernBtn').attr('rel','delConcern');
						   showSucceedMsg('关注成功!');
					   } else if (msg == 3){
						   showErrorMsg('未知错误');
					   }
					}
				});	
			} else if ( type == 'delConcern'){
				$.ajax({
					type : 'get',
					url  : url,
					data : {'op' : 'ajaxdel' , 'cuid' : cuid, 'random' : Math.random()},
					success : function(msg){
					   if(msg == 0){
						   showErrorMsg('参数错误！','消息提示');
					   } else if (msg == 1){
						   showErrorMsg('操作失败，请尝试刷新页面重试！','消息提示');
					   } else if (msg == 2){
						   $('#ConcernBtn').val('加关注');
						   $('#ConcernBtn').attr('rel','addConcern');
						   showSucceedMsg('成功取消关注！','消息提示');
					   } else if (msg == 3){
						   showErrorMsg('未知错误！','消息提示'); 
					   }
					}
				});	
			}
	});					   
});

//加好友
function addFriend(fuid, url){
	if(fuid == '' || fuid.length == 0){
		showErrorMsg('缺少参数！','信息提示');
		return false;
	}
	$.ajax({
		   type : 'get',
		   url : url,
		   data : {'op' : 'add', 'fuid' : fuid , 'random' : Math.random()},
		   success : function(msg){
				if(msg == -1){
					showErrorMsg('参数错误！','消息提示');
				} else if (msg == -2){
					showErrorMsg('添加好友失败,没有该用户的信息！','消息提示');
				} else if (msg == -3){
					showErrorMsg('添加好友失败,你不能添加自己为好友！','消息提示');
				} else if (msg == -4){
					showErrorMsg('添加好友未知错误,该错误已被记录！','消息提示');
				} else if (msg == -5){
					showErrorMsg('添加好友失败,你之前已经发送过好友请求,请耐心等待对方同意申请！','消息提示');
				} else if (msg == -6){
					showErrorMsg('添加好友失败,你们已经是好友了！','消息提示');
				} else {
					$.cover(true);
					asyncbox.open({
						id : 'addFriend',
						title : '添加好友',
						url : url,
						data : {'op' : 'add', 'fuid' : fuid , 'random' : Math.random()},
						width : 490,
						height : 180,
						scroll : 'no',
						callback : function(action) {
							if (action == 'close'){
								$.cover(false);
							}	
						}
					});	
				}
		   }
	});	
	
}

//发送短消息
function postMessage(msguid, url){
	if(msguid == '' || msguid.length == 0){
		showErrorMsg('缺少参数！','信息提示');
		return false;
	}
	
	$.ajax({
		   type : 'post',
		   url : url,
		   data : {'op' : 'ajaxpost', 'msguid' : msguid , 'random' : Math.random()},
		   success : function(msg){
				if(msg == -1){
					showErrorMsg('发送失败，缺少收件人对象！','消息提示');
				} else if(msg == -2){
					showErrorMsg('发送失败，自己不能给自己发送短消息！','消息提示');
				} else {
					$.cover(true);
					asyncbox.open({
						id : 'postMessage',
						title : '发送短消息',
						url : url,
						data : {'op' : 'ajaxpost', 'msguid' : msguid , 'random' : Math.random()},
						width : 510,
						height : 255,
						scroll : 'no',
						callback : function(action) {
							if (action == 'close'){
								$.cover(false);
							}	
						}
					});	
				}
		   }
	});	
}

</script>
<div class="Blog_left">
      <div class="Blog_left1 Blog_bg1">
        <div class="Blog_left1_1">
			<div class="img"></div><!-- 专家博客-->
			<a href="/uid/20940095.html">                            <img src="http://passport.ixpub.net/avatar.php?uid=20940095&size=middle" />
                        </a>
                        
            <p><a href="/uid/20940095.html" style="color:#c80000">liujunwei1234<em></em></a></p>
                     </div>
        <ul class="Blog_ul1 Blog_noline1">
          <li>博客访问： 1931897 </li>
          <li>博文数量： 276 </li>
          <li>博客积分： 9440 </li>
          <!--<li>专家积分： 180</li>-->
          <li>博客等级： 少将 </li>
		  <li>技术积分： 6879 </li>
          <li>用  户  组：  普通用户</li>
          <li>注册时间： 2009-05-03 10:28 </li>
                    <li>认证徽章：<img src="/image/renzheng.png"  style="vertical-align:middle;" /> </li>
                            </ul>  


        
                <div class="HT_line3 HT_line3_1"></div>
        <ul class="Blog_ul2">
          <li><input type="button" value="加关注" id="ConcernBtn" onclick="showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html')"></li>
          <li><input type="button" value="短消息" id="postMessageBtn" onclick="showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html')"></li>
          <li><input type="button" value="论坛" onclick="location.href='http://bbs.chinaunix.net'"></li>
          <li><input type="button" value="加好友" id="addFriendBtn" onclick="showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html')"></li>
        </ul>
              </div>
            <div class="Blog_left2 Blog_bg1">
        <div class="Blog_tit1">个人简介</div>
        <p class="Blog_p3">-- linux爱好者，业余时间热衷于分析linux内核源码

-- 目前主要研究云计算和虚拟化相关的技术，主要包括libvirt/qemu，openstack，opennebula架构和源码分析。

-- 第五届云计算大会演讲嘉宾

微博：@Marshal-Liu</p>
      </div>
        
         
      <div class="Blog_left2 Blog_bg1">
        <div class="Blog_tit1">文章分类</div>
        <div class="Blog_left2_1">
          <p class="Blog_p4"><a href="/uid/20940095/list/1.html">全部博文</a>（276）</p>
          <ul id="blogCla">
                            <li><a href="/uid/20940095/cid-173132-list-1.html" title="OpenStack">OpenStack</a>（23）
                                </li>
                            <li><a href="/uid/20940095/cid-161401-list-1.html" title="OpenNebula">OpenNebula</a>（12）
                                </li>
                            <li><a href="/uid/20940095/cid-159814-list-1.html" title="系统问题">系统问题</a>（22）
                                </li>
                            <li><a href="/uid/20940095/cid-11975-list-1.html" title="虚拟化/云计算">虚拟化/云计算</a>（29）
                                </li>
                            <li><a href="/uid/20940095/cid-3178-list-1.html" title="用户态驱动">用户态驱动</a>（3）
                                </li>
                            <li><a href="/uid/20940095/cid-3184-list-1.html" title="latex">latex</a>（10）
                                </li>
                            <li><a href="/uid/20940095/cid-3183-list-1.html" title="嵌入式">嵌入式</a>（14）
                                </li>
                            <li><a href="/uid/20940095/cid-3182-list-1.html" title="环境搭建（linux常用软件）">环境搭建（linux</a>（20）
                                </li>
                            <li><a href="/uid/20940095/cid-3181-list-1.html" title="体系结构">体系结构</a>（13）
                                </li>
                            <li><a href="/uid/20940095/cid-3180-list-1.html" title="IT 新闻">IT 新闻</a>（13）
                                </li>
                            <li><a href="/uid/20940095/cid-3179-list-1.html" title="linux环境编程">linux环境编程</a>（31）
                                </li>
                            <li><a href="/uid/20940095/cid-3177-list-1.html" title="qt程序设计">qt程序设计</a>（9）
                                </li>
                            <li><a href="/uid/20940095/cid-3176-list-1.html" title="c/c++ 学习">c/c++ 学习</a>（11）
                                </li>
                            <li><a href="/uid/20940095/cid-3175-list-1.html" title="linux 源码分析">linux 源码分析</a>（61）
                                </li>
                            <li><a href="/uid/20940095/cid--1-list-1.html" title="未分配的博文">未分配的博文</a>（5）
                                </li>
                      </ul>
        </div>
      </div>
      	              <div class="Blog_left2 Blog_bg1">
        <div class="Blog_tit1">文章存档</div>
        <div class="Blog_left2_1" id="blogdtr">
                    <p class="Blog_p4"><span class="Blog_jia1"></span><a href="/uid/20940095/year-2016-list-1.html">2016年</a>（1）</p>
          <ul style="display:none;" class="Blog_ul3 zk">
                        <li><a href="/uid/20940095/year-201602-list-1.html">2016年02月</a>（1）</li>
                      </ul>
                    <p class="Blog_p4"><span class="Blog_jia1"></span><a href="/uid/20940095/year-2015-list-1.html">2015年</a>（4）</p>
          <ul style="display:none;" class="Blog_ul3 zk">
                        <li><a href="/uid/20940095/year-201505-list-1.html">2015年05月</a>（2）</li>
                        <li><a href="/uid/20940095/year-201502-list-1.html">2015年02月</a>（1）</li>
                        <li><a href="/uid/20940095/year-201501-list-1.html">2015年01月</a>（1）</li>
                      </ul>
                    <p class="Blog_p4"><span class="Blog_jia1"></span><a href="/uid/20940095/year-2014-list-1.html">2014年</a>（18）</p>
          <ul style="display:none;" class="Blog_ul3 zk">
                        <li><a href="/uid/20940095/year-201412-list-1.html">2014年12月</a>（1）</li>
                        <li><a href="/uid/20940095/year-201408-list-1.html">2014年08月</a>（3）</li>
                        <li><a href="/uid/20940095/year-201407-list-1.html">2014年07月</a>（1）</li>
                        <li><a href="/uid/20940095/year-201406-list-1.html">2014年06月</a>（3）</li>
                        <li><a href="/uid/20940095/year-201404-list-1.html">2014年04月</a>（5）</li>
                        <li><a href="/uid/20940095/year-201403-list-1.html">2014年03月</a>（1）</li>
                        <li><a href="/uid/20940095/year-201402-list-1.html">2014年02月</a>（2）</li>
                        <li><a href="/uid/20940095/year-201401-list-1.html">2014年01月</a>（2）</li>
                      </ul>
                    <p class="Blog_p4"><span class="Blog_jia1"></span><a href="/uid/20940095/year-2013-list-1.html">2013年</a>（29）</p>
          <ul style="display:none;" class="Blog_ul3 zk">
                        <li><a href="/uid/20940095/year-201312-list-1.html">2013年12月</a>（2）</li>
                        <li><a href="/uid/20940095/year-201311-list-1.html">2013年11月</a>（2）</li>
                        <li><a href="/uid/20940095/year-201309-list-1.html">2013年09月</a>（3）</li>
                        <li><a href="/uid/20940095/year-201308-list-1.html">2013年08月</a>（1）</li>
                        <li><a href="/uid/20940095/year-201307-list-1.html">2013年07月</a>（1）</li>
                        <li><a href="/uid/20940095/year-201304-list-1.html">2013年04月</a>（10）</li>
                        <li><a href="/uid/20940095/year-201303-list-1.html">2013年03月</a>（2）</li>
                        <li><a href="/uid/20940095/year-201302-list-1.html">2013年02月</a>（5）</li>
                        <li><a href="/uid/20940095/year-201301-list-1.html">2013年01月</a>（3）</li>
                      </ul>
                    <p class="Blog_p4"><span class="Blog_jia1"></span><a href="/uid/20940095/year-2012-list-1.html">2012年</a>（48）</p>
          <ul style="display:none;" class="Blog_ul3 zk">
                        <li><a href="/uid/20940095/year-201212-list-1.html">2012年12月</a>（5）</li>
                        <li><a href="/uid/20940095/year-201211-list-1.html">2012年11月</a>（4）</li>
                        <li><a href="/uid/20940095/year-201210-list-1.html">2012年10月</a>（3）</li>
                        <li><a href="/uid/20940095/year-201209-list-1.html">2012年09月</a>（4）</li>
                        <li><a href="/uid/20940095/year-201208-list-1.html">2012年08月</a>（6）</li>
                        <li><a href="/uid/20940095/year-201207-list-1.html">2012年07月</a>（8）</li>
                        <li><a href="/uid/20940095/year-201206-list-1.html">2012年06月</a>（5）</li>
                        <li><a href="/uid/20940095/year-201205-list-1.html">2012年05月</a>（4）</li>
                        <li><a href="/uid/20940095/year-201203-list-1.html">2012年03月</a>（4）</li>
                        <li><a href="/uid/20940095/year-201202-list-1.html">2012年02月</a>（5）</li>
                      </ul>
                    <p class="Blog_p4"><span class="Blog_jia1"></span><a href="/uid/20940095/year-2011-list-1.html">2011年</a>（60）</p>
          <ul style="display:none;" class="Blog_ul3 zk">
                        <li><a href="/uid/20940095/year-201112-list-1.html">2011年12月</a>（2）</li>
                        <li><a href="/uid/20940095/year-201111-list-1.html">2011年11月</a>（8）</li>
                        <li><a href="/uid/20940095/year-201110-list-1.html">2011年10月</a>（9）</li>
                        <li><a href="/uid/20940095/year-201109-list-1.html">2011年09月</a>（3）</li>
                        <li><a href="/uid/20940095/year-201106-list-1.html">2011年06月</a>（3）</li>
                        <li><a href="/uid/20940095/year-201105-list-1.html">2011年05月</a>（5）</li>
                        <li><a href="/uid/20940095/year-201104-list-1.html">2011年04月</a>（7）</li>
                        <li><a href="/uid/20940095/year-201103-list-1.html">2011年03月</a>（5）</li>
                        <li><a href="/uid/20940095/year-201102-list-1.html">2011年02月</a>（9）</li>
                        <li><a href="/uid/20940095/year-201101-list-1.html">2011年01月</a>（9）</li>
                      </ul>
                    <p class="Blog_p4"><span class="Blog_jia1"></span><a href="/uid/20940095/year-2010-list-1.html">2010年</a>（41）</p>
          <ul style="display:none;" class="Blog_ul3 zk">
                        <li><a href="/uid/20940095/year-201012-list-1.html">2010年12月</a>（4）</li>
                        <li><a href="/uid/20940095/year-201011-list-1.html">2010年11月</a>（2）</li>
                        <li><a href="/uid/20940095/year-201010-list-1.html">2010年10月</a>（3）</li>
                        <li><a href="/uid/20940095/year-201009-list-1.html">2010年09月</a>（1）</li>
                        <li><a href="/uid/20940095/year-201008-list-1.html">2010年08月</a>（7）</li>
                        <li><a href="/uid/20940095/year-201007-list-1.html">2010年07月</a>（1）</li>
                        <li><a href="/uid/20940095/year-201003-list-1.html">2010年03月</a>（16）</li>
                        <li><a href="/uid/20940095/year-201001-list-1.html">2010年01月</a>（7）</li>
                      </ul>
                    <p class="Blog_p4"><span class="Blog_jia1"></span><a href="/uid/20940095/year-2009-list-1.html">2009年</a>（75）</p>
          <ul style="display:none;" class="Blog_ul3 zk">
                        <li><a href="/uid/20940095/year-200912-list-1.html">2009年12月</a>（13）</li>
                        <li><a href="/uid/20940095/year-200911-list-1.html">2009年11月</a>（8）</li>
                        <li><a href="/uid/20940095/year-200910-list-1.html">2009年10月</a>（9）</li>
                        <li><a href="/uid/20940095/year-200909-list-1.html">2009年09月</a>（14）</li>
                        <li><a href="/uid/20940095/year-200908-list-1.html">2009年08月</a>（3）</li>
                        <li><a href="/uid/20940095/year-200907-list-1.html">2009年07月</a>（2）</li>
                        <li><a href="/uid/20940095/year-200906-list-1.html">2009年06月</a>（15）</li>
                        <li><a href="/uid/20940095/year-200905-list-1.html">2009年05月</a>（11）</li>
                      </ul>
                  </div>
      </div>
      	  	        <div class="Blog_left2 Blog_bg1">
        <div class="Blog_tit1">我的朋友</div>
        <ul class="Blog_ul4">
                    <li><a href="/uid/30881302.html">              <img src="http://passport.ixpub.net/avatar.php?uid=30881302&size=small" />
              </a>
            <p><a href="/uid/30881302.html" title="眼睛去旅行365">眼睛去旅</a></p>
          </li>
                    <li><a href="/uid/30900913.html">              <img src="http://passport.ixpub.net/avatar.php?uid=30900913&size=small" />
              </a>
            <p><a href="/uid/30900913.html" title="echo101202">echo1012</a></p>
          </li>
                    <li><a href="/uid/21524176.html">              <img src="http://passport.ixpub.net/avatar.php?uid=21524176&size=small" />
              </a>
            <p><a href="/uid/21524176.html" title="eagledame">eagledam</a></p>
          </li>
                    <li><a href="/uid/30811391.html">              <img src="http://passport.ixpub.net/avatar.php?uid=30811391&size=small" />
              </a>
            <p><a href="/uid/30811391.html" title="879530626">87953062</a></p>
          </li>
                    <li><a href="/uid/30533466.html">              <img src="http://passport.ixpub.net/avatar.php?uid=30533466&size=small" />
              </a>
            <p><a href="/uid/30533466.html" title="15995452835">15995452</a></p>
          </li>
                    <li><a href="/uid/11767023.html">              <img src="http://passport.ixpub.net/avatar.php?uid=11767023&size=small" />
              </a>
            <p><a href="/uid/11767023.html" title="sunnyhcf_2008">sunnyhcf</a></p>
          </li>
                    <li><a href="/uid/30530062.html">              <img src="http://passport.ixpub.net/avatar.php?uid=30530062&size=small" />
              </a>
            <p><a href="/uid/30530062.html" title="wust_ly">wust_ly</a></p>
          </li>
                    <li><a href="/uid/29523795.html">              <img src="http://passport.ixpub.net/avatar.php?uid=29523795&size=small" />
              </a>
            <p><a href="/uid/29523795.html" title="Yiran_Linux">Yiran_Li</a></p>
          </li>
                    <li><a href="/uid/30282771.html">              <img src="http://passport.ixpub.net/avatar.php?uid=30282771&size=small" />
              </a>
            <p><a href="/uid/30282771.html" title="夕阳下的孤影">夕阳下的</a></p>
          </li>
                  </ul>
      </div>
	  	        <div class="Blog_left2 Blog_bg1">
        <div class="Blog_tit1">最近访客</div>
        <ul class="Blog_ul4">
                    <li><a href="/uid/28717641.html">              <img src="http://passport.ixpub.net/avatar.php?uid=28717641&size=small" />
              </a>
            <p><a href="/uid/28717641.html" title="蜘蛛爬爬">蜘蛛爬爬</a></p>
          </li>
                    <li><a href="/uid/31392966.html">              <img src="http://passport.ixpub.net/avatar.php?uid=31392966&size=small" />
              </a>
            <p><a href="/uid/31392966.html" title="kaijiehui">kaijiehu</a></p>
          </li>
                    <li><a href="/uid/28396838.html">              <img src="http://passport.ixpub.net/avatar.php?uid=28396838&size=small" />
              </a>
            <p><a href="/uid/28396838.html" title="yedushu">yedushu</a></p>
          </li>
                    <li><a href="/uid/30808975.html">              <img src="http://passport.ixpub.net/avatar.php?uid=30808975&size=small" />
              </a>
            <p><a href="/uid/30808975.html" title="1519623220">15196232</a></p>
          </li>
                    <li><a href="/uid/26833883.html">              <img src="http://passport.ixpub.net/avatar.php?uid=26833883&size=small" />
              </a>
            <p><a href="/uid/26833883.html" title="草根老师">草根老师</a></p>
          </li>
                    <li><a href="/uid/21211071.html">              <img src="http://passport.ixpub.net/avatar.php?uid=21211071&size=small" />
              </a>
            <p><a href="/uid/21211071.html" title="cdxyrb">cdxyrb</a></p>
          </li>
                    <li><a href="/uid/8213580.html">              <img src="http://passport.ixpub.net/avatar.php?uid=8213580&size=small" />
              </a>
            <p><a href="/uid/8213580.html" title="akun2004">akun2004</a></p>
          </li>
                    <li><a href="/uid/26598408.html">              <img src="http://passport.ixpub.net/avatar.php?uid=26598408&size=small" />
              </a>
            <p><a href="/uid/26598408.html" title="wybmagic">wybmagic</a></p>
          </li>
                    <li><a href="/uid/23504396.html">              <img src="http://passport.ixpub.net/avatar.php?uid=23504396&size=small" />
              </a>
            <p><a href="/uid/23504396.html" title="lolizeppelin">lolizepp</a></p>
          </li>
                  </ul>
      </div>
	           <div  class="Blog_left2 Blog_left3 Blog_bg1">
        <div class="Blog_tit1">微信关注</div>
        <div class="">
                <div class="" style="float:left; margin-right:5px;">
                 <img width="90" height="90" alt="" src="/image/IT168.jpg"/>
                 </div><br>
                <div class="" style="margin-top:10px;">
                 <p class="">
                         IT168企业级官微
                </p>
                 <p class="">

                 <br></br>
                 微信号：IT168qiye
                </p>
                </div>
        </div>
<hr size="1" style="clear:both;">
        <div class="" style="clear:both;">
                <div class="" style="float:left; margin-right:5px;">
                 <img width="90" height="90" alt="" src="/image/itpub.jpg"/>
                 </div><br>
                <div class="" style="margin-top:10px;">
                 <p class="">
                         系统架构师大会
                </p>
                 <p class="">

                 <br></br>
                 微信号：SACC2013
                </p>
                </div>
        </div>

</div>
      <div class="Blog_left2 Blog_bg1">
        <div class="Blog_tit1">订阅</div>
        <ul class="Blog_ul5">
          <li><a href="/blog/rss/uid/20940095.html" class="Blog_a4"></a></li>
          <li><a href="http://www.google.com/ig/add?feedurl=http%3A%2F%2Fblog.chinaunix.net%2Fuid%2F20940095.html" class="Blog_a5"></a></li>
        </ul>
      </div>
      <div class="Blog_left2 Blog_left3 Blog_bg1">
        <div class="Blog_tit1">推荐博文</div>
        <ul class="Blog_ul6">
				  			<li>·<a href="/uid-30241692-id-5752525.html" title="Linux下的Python调试">Linux下的Python调试</a></li>
		  			<li>·<a href="/uid-29847640-id-5752523.html" title="centos环境下的apache 2.4虚拟主机的三种实现方法">centos环境下的apache 2.4虚...</a></li>
		  			<li>·<a href="/uid-31087949-id-5752533.html" title="Linux网络中通知链的使用">Linux网络中通知链的使用...</a></li>
		  			<li>·<a href="/uid-15464162-id-5752075.html" title="nginx与php-fpm  504 Gateway Time-out 排查与解决案例">nginx与php-fpm  504 Gateway...</a></li>
		  			<li>·<a href="/uid-27127077-id-5751929.html" title="Oracle 12c far sync active dataguard 架构使用DGMGRL管理配置">Oracle 12c far sync active ...</a></li>
		  						  			<li>·<a href="http://blog.itpub.net/23718752/viewspace-2125662" title="迁移式升级的测试（二）">迁移式升级的测试（二）...</a></li>
		  			<li>·<a href="http://blog.itpub.net/26736162/viewspace-2125659" title="【方法整理】Oracle 获取trace跟踪文件名的几种常用方式">【方法整理】Oracle 获取trac...</a></li>
		  			<li>·<a href="http://blog.itpub.net/53956/viewspace-2125576" title="那些你眼熟的global cache等待事件是如何被触发的(一)">那些你眼熟的global cache等...</a></li>
		  			<li>·<a href="http://blog.itpub.net/7192724/viewspace-2125542" title="客户端ADR配置">客户端ADR配置</a></li>
		  			<li>·<a href="http://blog.itpub.net/23718752/viewspace-2125524" title="闪回区空间不足引发的SQL问题分析">闪回区空间不足引发的SQL问题...</a></li>
		  				
        </ul>
      </div>
      <div class="Blog_left2 Blog_left3 Blog_bg1">
        <div class="Blog_tit1">热词专题</div>
        <ul class="Blog_ul6">
                        <li >·<a href="/zt/1000/linux_1000000.shtml" target='blank' title='lua编译(linux)'>lua编译(linux)</a></li>
                        <li class="no_line1">·<a href="/zt/1000/linuxarmg_1000001.shtml" target='blank' title='linux+ARM学习路线'>linux+ARM学习路线</a></li>
          <!--              <li>·<a href="http://www.dataguru.cn/zhuanti/hadoop220peizhi.shtml" target='blank' title='配置hadoop2.2.0格式化namenode问题'></a></li>
              <li>·<a href="http://www.dataguru.cn/zhuanti/hadoopshouce.shtml" target='blank' title='hadoop2.2.0安装手册'></a></li>-->
        </ul>
      </div>
	  

	</div>
<script language="javascript">
$(document).ready(function(){
    /*目录树JS效果*/
	$('#blogCla li > span').click(function(){
		var cla = $(this).attr('class');
		if(cla == 'Blog_jia1'){
			//$('#blogCla li > span').removeClass('Blog_jian1').addClass('Blog_jia1');
			//$('#blogCla li > .zk').css('display', 'none');
				
			$(this).removeClass('Blog_jia1').addClass('Blog_jian1');
            $(this).parent().children('.zk').css('display', 'block');
		}else{
			$(this).removeClass('Blog_jian1').addClass('Blog_jia1');
            $(this).parent().children('.zk').css('display', 'none');
		}
	});
		
	$('#blogdtr > p > span').click(function(){
		var cla = $(this).attr('class');
		if(cla == 'Blog_jia1'){
			//$('#blogdtr > .Blog_p4 > span').removeClass('Blog_jian1').addClass('Blog_jia1');
			//$('#blogdtr ul').css('display', 'none');
				
			$(this).removeClass('Blog_jia1').addClass('Blog_jian1');
            $(this).parent().next().css('display', 'block');
		}else{
			$(this).removeClass('Blog_jian1').addClass('Blog_jia1');
            $(this).parent().next().css('display', 'none');
		}
	});
});
</script>    <!-- 右 -->
    <div class="Blog_right1">
      <div class="Blog_right1_1 Blog_right1_11">
        <div class="Blog_right1_2 ">
			<!--推荐博文-->
          <div class="Blog_tit4 Blog_tit5">
                        <b class="Blog_b2"></b>
            <a href="/uid-20940095-id-66146.html">C语言实现继承和多态</a>
            <em>2010-10-08 14:08:23</em>
          </div>
          <div class="Blog_con2">
            <div class="Blog_con3">
              <p>分类： <span>C/C++</span></p>
			                </p>
            </div>
           <div class="Blog_wz1" style='word-wrap: break-word;'>
						<DIV>
<P>继承和多态是面向对象语言最强大的功能。有了继承和多态，我们可以完成代码重用。在C中有许多技巧可以实现多态。本文的目的就是演示一种简单和容易的技术，在C中应用继承和多态。通过创建一个VTable（virtual table）和在基类和派生类对象之间提供正确的访问，我们能在C中实现继承和多态。VTable能通过维护一张函数表指针表来实现。为了提供基类和派生类对象之间的访问，我们可以在基类中维护派生类的引用和在派生类中维护基类的引用。</P>
<H4><STRONG>2、说明</STRONG></H4>
<P>在C中实现继承和多态之前，我们应该知道类（Class）在C中如何表示。</P>
<H4><STRONG>2.1、类在C中的表示</STRONG></H4>
<P>考虑C++中的一个类"Person"。</P>
<DIV><PRE><SPAN style="COLOR: #008000">//Person.h</SPAN>
class Person
{
private:
    <SPAN style="COLOR: #0000ff">char</SPAN>* pFirstName;
    <SPAN style="COLOR: #0000ff">char</SPAN>* pLastName;
    
public:
    Person(<SPAN style="COLOR: #0000ff">const</SPAN> <SPAN style="COLOR: #0000ff">char</SPAN>* pFirstName, <SPAN style="COLOR: #0000ff">const</SPAN> <SPAN style="COLOR: #0000ff">char</SPAN>* pLastName);    <SPAN style="COLOR: #008000">//constructor</SPAN>
    ~Person();    <SPAN style="COLOR: #008000">//destructor</SPAN>

    <SPAN style="COLOR: #0000ff">void</SPAN> displayInfo();
    <SPAN style="COLOR: #0000ff">void</SPAN> writeToFile(<SPAN style="COLOR: #0000ff">const</SPAN> <SPAN style="COLOR: #0000ff">char</SPAN>* pFileName);

};</PRE></DIV>
<P>在C中表示上面的类，我们可以使用结构体，并用操作结构体的函数表示成员函数。</P>
<DIV><PRE><SPAN style="COLOR: #008000">//Person.h</SPAN>
<SPAN style="COLOR: #0000ff">typedef</SPAN> <SPAN style="COLOR: #0000ff">struct</SPAN> _Person
{
    <SPAN style="COLOR: #0000ff">char</SPAN>* pFirstName;
    <SPAN style="COLOR: #0000ff">char</SPAN>* pLastName;
}Person;

new_Person(<SPAN style="COLOR: #0000ff">const</SPAN> <SPAN style="COLOR: #0000ff">char</SPAN>* <SPAN style="COLOR: #0000ff">const</SPAN> pFirstName, <SPAN style="COLOR: #0000ff">const</SPAN> <SPAN style="COLOR: #0000ff">char</SPAN>* <SPAN style="COLOR: #0000ff">const</SPAN> pLastName);    <SPAN style="COLOR: #008000">//constructor</SPAN>
delete_Person(Person* <SPAN style="COLOR: #0000ff">const</SPAN> pPersonObj);    <SPAN style="COLOR: #008000">//destructor</SPAN>

<SPAN style="COLOR: #0000ff">void</SPAN> Person_DisplayInfo(Person* <SPAN style="COLOR: #0000ff">const</SPAN> pPersonObj);
<SPAN style="COLOR: #0000ff">void</SPAN> Person_WriteToFile(Person* <SPAN style="COLOR: #0000ff">const</SPAN> pPersonObj, <SPAN style="COLOR: #0000ff">const</SPAN> <SPAN style="COLOR: #0000ff">char</SPAN>* <SPAN style="COLOR: #0000ff">const</SPAN> pFileName);</PRE></DIV>
<P></P>
<P>这里，定义的操作结构体Person的函数没有封装。为了实现封装，即绑定数据、函数、函数指针。我们需要创建一个函数指针表。构造函数new_Person()将设置函数指针值以指向合适的函数。这个函数指针表将作为对象访问函数的接口。</P>
<P>下面我们重新定义C中实现类Person。</P>
<DIV><PRE><SPAN style="COLOR: #008000">//Person.h</SPAN>

<SPAN style="COLOR: #0000ff">typedef</SPAN> <SPAN style="COLOR: #0000ff">struct</SPAN> _Person Person;

<SPAN style="COLOR: #008000">//declaration of pointers to functions</SPAN>
<SPAN style="COLOR: #0000ff">typedef</SPAN> <SPAN style="COLOR: #0000ff">void</SPAN>    (*fptrDisplayInfo)(Person*);
<SPAN style="COLOR: #0000ff">typedef</SPAN> <SPAN style="COLOR: #0000ff">void</SPAN>    (*fptrWriteToFile)( Person*, <SPAN style="COLOR: #0000ff">const</SPAN> <SPAN style="COLOR: #0000ff">char</SPAN>*);
<SPAN style="COLOR: #0000ff">typedef</SPAN> <SPAN style="COLOR: #0000ff">void</SPAN>    (*fptrDelete)( Person *) ;

<SPAN style="COLOR: #008000">//Note: In C all the members are by default public. We can achieve </SPAN>
<SPAN style="COLOR: #008000">//the data hiding (private members), but that method is tricky. </SPAN>
<SPAN style="COLOR: #008000">//For simplification of this article</SPAN>
<SPAN style="COLOR: #008000">// we are considering the data members     //public only.</SPAN>
<SPAN style="COLOR: #0000ff">typedef</SPAN> <SPAN style="COLOR: #0000ff">struct</SPAN> _Person 
{
    <SPAN style="COLOR: #0000ff">char</SPAN>* pFName;
    <SPAN style="COLOR: #0000ff">char</SPAN>* pLName;
    <SPAN style="COLOR: #008000">//interface for function</SPAN>
    fptrDisplayInfo   Display;
    fptrWriteToFile   WriteToFile;
    fptrDelete      Delete;
}Person;

person* new_Person(<SPAN style="COLOR: #0000ff">const</SPAN> <SPAN style="COLOR: #0000ff">char</SPAN>* <SPAN style="COLOR: #0000ff">const</SPAN> pFirstName, 
                   <SPAN style="COLOR: #0000ff">const</SPAN> <SPAN style="COLOR: #0000ff">char</SPAN>* <SPAN style="COLOR: #0000ff">const</SPAN> pLastName); <SPAN style="COLOR: #008000">//constructor</SPAN>
<SPAN style="COLOR: #0000ff">void</SPAN> delete_Person(Person* <SPAN style="COLOR: #0000ff">const</SPAN> pPersonObj);    <SPAN style="COLOR: #008000">//destructor</SPAN>

<SPAN style="COLOR: #0000ff">void</SPAN> Person_DisplayInfo(Person* <SPAN style="COLOR: #0000ff">const</SPAN> pPersonObj);
<SPAN style="COLOR: #0000ff">void</SPAN> Person_WriteToFile(Person* <SPAN style="COLOR: #0000ff">const</SPAN> pPersonObj, <SPAN style="COLOR: #0000ff">const</SPAN> <SPAN style="COLOR: #0000ff">char</SPAN>* pFileName);</PRE></DIV>
<P>new_Person()函数作为构造函数，它返回新创建的结构体实例。它初始化函数指针接口去访问其它成员函数。这里要注意的一点是，我们仅仅定义了那些允许公共访问的函数指针，并没有给定私有函数的接口。让我们看一下new_Person()函数或C中类Person的构造函数。</P>
<DIV><PRE><SPAN style="COLOR: #008000">//Person.c</SPAN>
person* new_Person(<SPAN style="COLOR: #0000ff">const</SPAN> <SPAN style="COLOR: #0000ff">char</SPAN>* <SPAN style="COLOR: #0000ff">const</SPAN> pFirstName, <SPAN style="COLOR: #0000ff">const</SPAN> <SPAN style="COLOR: #0000ff">char</SPAN>* <SPAN style="COLOR: #0000ff">const</SPAN> pLastName)
{
    Person* pObj = NULL;
    <SPAN style="COLOR: #008000">//allocating memory</SPAN>
    pObj = (Person*)<SPAN style="COLOR: #0000ff">malloc</SPAN>(<SPAN style="COLOR: #0000ff">sizeof</SPAN>(Person));
    <SPAN style="COLOR: #0000ff">if</SPAN> (pObj == NULL)
    {
        <SPAN style="COLOR: #0000ff">return</SPAN> NULL;
    }
    pObj->pFirstName = <SPAN style="COLOR: #0000ff">malloc</SPAN>(<SPAN style="COLOR: #0000ff">sizeof</SPAN>(<SPAN style="COLOR: #0000ff">char</SPAN>)*(strlen(pFirstName)+1));
    <SPAN style="COLOR: #0000ff">if</SPAN> (pObj->pFirstName == NULL)
    {
        <SPAN style="COLOR: #0000ff">return</SPAN> NULL;
    }
    <SPAN style="COLOR: #0000ff">strcpy</SPAN>(pObj->pFirstName, pFirstName);

    pObj->pLastName = <SPAN style="COLOR: #0000ff">malloc</SPAN>(<SPAN style="COLOR: #0000ff">sizeof</SPAN>(<SPAN style="COLOR: #0000ff">char</SPAN>)*(strlen(pLastName)+1));
    <SPAN style="COLOR: #0000ff">if</SPAN> (pObj->pLastName == NULL)
    {
        <SPAN style="COLOR: #0000ff">return</SPAN> NULL;
    }
    <SPAN style="COLOR: #0000ff">strcpy</SPAN>(pObj->pLastName, pLastName);

    <SPAN style="COLOR: #008000">//Initializing interface for access to functions</SPAN>
    pObj->Delete = delete_Person;
    pObj->Display = Person_DisplayInfo;
    pObj->WriteToFile = Person_WriteToFile;

    <SPAN style="COLOR: #0000ff">return</SPAN> pObj;
}</PRE></DIV>
<P></P>
<P>创建完对象之后，我们能够访问它的数据成员和函数。</P>
<DIV><PRE>Person* pPersonObj = new_Person("<SPAN style="COLOR: #8b0000">Anjali</SPAN>", "<SPAN style="COLOR: #8b0000">Jaiswal</SPAN>");
<SPAN style="COLOR: #008000">//displaying person info</SPAN>
pPersonObj->Display(pPersonObj);
<SPAN style="COLOR: #008000">//writing person info in the persondata.txt file</SPAN>
pPersonObj->WriteToFile(pPersonObj, "<SPAN style="COLOR: #8b0000">persondata.txt</SPAN>");
<SPAN style="COLOR: #008000">//delete the person object</SPAN>
pPersonObj->Delete(pPersonObj);
pPersonObj = NULL;</PRE></DIV>
<P>注意：不像C++，在C中我们不能在函数中直接访问数据成员。在C++中，可以隐式通过“this”指针直接访问数据成员。我们知道C中是没有“this”指针的，通过显示地传递对象给成员函数。在C中为了访问类的数据成员，我们需要把调用对象作为函数参数传递。上面的例子中，我们把调用对象作为函数的第一个参数，通过这种方法，函数可以访问对象的数据成员。</P>
<H4><STRONG>3、在C中类的表现</STRONG></H4>
<P>Person类的表示——检查初始化接口指向成员函数：</P>
<H4><STRONG>3.1、继承和多态的简单例子</STRONG></H4>
<P>继承-Employee类继承自Person类：</P>
<P><A href="http://images.cnblogs.com/cnblogs_com/skynet/WindowsLiveWriter/C_B552/image_2.png"><IMG title=image style="BORDER-TOP-WIDTH: 0px; DISPLAY: block; BORDER-LEFT-WIDTH: 0px; FLOAT: none; BORDER-BOTTOM-WIDTH: 0px; MARGIN-LEFT: auto; MARGIN-RIGHT: auto; BORDER-RIGHT-WIDTH: 0px" height=455 alt=image src="http://images.cnblogs.com/cnblogs_com/skynet/WindowsLiveWriter/C_B552/image_thumb.png" width=302 border=0></A></P>
<P>在上面的例子中，类Employee继承类Person的属性。因为DisplayInfo()和WriteToFile()函数是virtual的，我们能够从Person的实例访问Employee对象中的同名函数。为了实现这个，我们创建Person实例的时候也初始化Employee类。多态使这成为可能。 在多态的情况下，去解析函数调用，C++使用VTable——即一张函数指针表。</P>
<P>前面我们在结构体中维护的指向函数的指针接口的作用类似于VTable。</P>
<DIV><PRE><SPAN style="COLOR: #008000">//Polymorphism in C++</SPAN>
Person PersonObj("<SPAN style="COLOR: #8b0000">Anjali</SPAN>", "<SPAN style="COLOR: #8b0000">Jaiswal</SPAN>");
Employee EmployeeObj("<SPAN style="COLOR: #8b0000">Gauri</SPAN>", "<SPAN style="COLOR: #8b0000">Jaiswal</SPAN>", "<SPAN style="COLOR: #8b0000">HR</SPAN>", "<SPAN style="COLOR: #8b0000">TCS</SPAN>", 40000);

Person* ptrPersonObj = NULL;
    
<SPAN style="COLOR: #008000">//preson pointer pointing to person object</SPAN>
ptrPersonObj = &PersonObj;
<SPAN style="COLOR: #008000">//displaying person info</SPAN>
ptrPersonObj ->Display();
<SPAN style="COLOR: #008000">//writing person info in the persondata.txt file</SPAN>
ptrPersonObj ->WriteToFile("<SPAN style="COLOR: #8b0000">persondata.txt</SPAN>");

<SPAN style="COLOR: #008000">//preson pointer pointing to employee object</SPAN>
ptrPersonObj = &EmployeeObj;
<SPAN style="COLOR: #008000">//displaying employee info</SPAN>
ptrPersonObj ->Display();
<SPAN style="COLOR: #008000">//writing empolyee info in the employeedata.txt file</SPAN>
ptrPersonObj ->WriteToFile("<SPAN style="COLOR: #8b0000">employeedata.txt</SPAN>");</PRE></DIV>
<P>在C中，继承可以通过在派生类对象中维护一个基类对象的引用来完成。在基类实例的帮助下，women可以访问基类的数据成员和函数。然而，为了实现多态，街垒对象应该能够访问派生类对象的数据。为了实现这个，基类应该有访问派生类的数据成员的权限。 </P>
<P>为了实现虚函数，派生类的函数签名应该和基类的函数指针类似。即派生类函数将以基类对象的一个实例为参数。我们在基类中维护一个派生类的引用。在函数实现上，我们可以从派生类的引用访问实际派生类的数据。</P>
<H4><STRONG>3.2、在C中结构体中的等效表示</STRONG></H4>
<P>C中的继承-Person和Employee结构体：</P>
<P><A href="http://images.cnblogs.com/cnblogs_com/skynet/WindowsLiveWriter/C_B552/image_4.png"><IMG title=image style="BORDER-TOP-WIDTH: 0px; DISPLAY: block; BORDER-LEFT-WIDTH: 0px; FLOAT: none; BORDER-BOTTOM-WIDTH: 0px; MARGIN-LEFT: auto; MARGIN-RIGHT: auto; BORDER-RIGHT-WIDTH: 0px" height=176 alt=image src="http://images.cnblogs.com/cnblogs_com/skynet/WindowsLiveWriter/C_B552/image_thumb_1.png" width=512 border=0></A> </P>
<P>如图所示，我们在基类结构体中声明了一个指针保存派生类对像，并在派生类结构体中声明一个指针保存基类对象。</P>
<P>在基类对象中，函数指针指向自己的虚函数。在派生类对象的构造函数中，我们需要使基类的接口指向派生类的成员函数。这使我们可以通过基类对象（多态）灵活的调用派生类函数。更多细节，请检查Person和Employee对象的构造函数。</P>
<P>当我们讨论C++中的多态时，有一个对象销毁的问题。为了正确的清楚对象，它使用虚析构函数。在C中，这可以通过使基类的删除函数指针指向派生类的析构函数。派生类的析构函数清楚派生类的数据和基类的数据和对象。注意：检查例子的源码中，实现须构造函数和虚函数的实现细节。</P>
<H4><STRONG>创建Person对象</STRONG></H4>
<DIV><PRE><SPAN style="COLOR: #008000">//Person.h</SPAN>

<SPAN style="COLOR: #0000ff">typedef</SPAN> <SPAN style="COLOR: #0000ff">struct</SPAN> _Person Person;

<SPAN style="COLOR: #008000">//pointers to function</SPAN>
<SPAN style="COLOR: #0000ff">typedef</SPAN> <SPAN style="COLOR: #0000ff">void</SPAN>    (*fptrDisplayInfo)(Person*);
<SPAN style="COLOR: #0000ff">typedef</SPAN> <SPAN style="COLOR: #0000ff">void</SPAN>    (*fptrWriteToFile)(Person*, <SPAN style="COLOR: #0000ff">const</SPAN> <SPAN style="COLOR: #0000ff">char</SPAN>*);
<SPAN style="COLOR: #0000ff">typedef</SPAN> <SPAN style="COLOR: #0000ff">void</SPAN>    (*fptrDelete)(Person*) ;

<SPAN style="COLOR: #0000ff">typedef</SPAN> <SPAN style="COLOR: #0000ff">struct</SPAN> _person
{
    <SPAN style="COLOR: #0000ff">void</SPAN>* pDerivedObj;
    <SPAN style="COLOR: #0000ff">char</SPAN>* pFirstName;
    <SPAN style="COLOR: #0000ff">char</SPAN>* pLastName;
    fptrDisplayInfo Display;
    fptrWriteToFile WriteToFile;
    fptrDelete        Delete;
}person;

Person* new_Person(<SPAN style="COLOR: #0000ff">const</SPAN> <SPAN style="COLOR: #0000ff">char</SPAN>* <SPAN style="COLOR: #0000ff">const</SPAN> pFristName, 
                   <SPAN style="COLOR: #0000ff">const</SPAN> <SPAN style="COLOR: #0000ff">char</SPAN>* <SPAN style="COLOR: #0000ff">const</SPAN> pLastName);    <SPAN style="COLOR: #008000">//constructor</SPAN>
<SPAN style="COLOR: #0000ff">void</SPAN> delete_Person(Person* <SPAN style="COLOR: #0000ff">const</SPAN> pPersonObj);    <SPAN style="COLOR: #008000">//destructor</SPAN>

<SPAN style="COLOR: #0000ff">void</SPAN> Person_DisplayInfo(Person* <SPAN style="COLOR: #0000ff">const</SPAN> pPersonObj);
<SPAN style="COLOR: #0000ff">void</SPAN> Person_WriteToFile(Person* <SPAN style="COLOR: #0000ff">const</SPAN> pPersonObj, <SPAN style="COLOR: #0000ff">const</SPAN> <SPAN style="COLOR: #0000ff">char</SPAN>* <SPAN style="COLOR: #0000ff">const</SPAN> pFileName);
    
<SPAN style="COLOR: #008000">//Person.c</SPAN>
<SPAN style="COLOR: #008000">//construction of Person object</SPAN>
Person* new_Person(<SPAN style="COLOR: #0000ff">const</SPAN> <SPAN style="COLOR: #0000ff">char</SPAN>* <SPAN style="COLOR: #0000ff">const</SPAN> pFirstName, <SPAN style="COLOR: #0000ff">const</SPAN> <SPAN style="COLOR: #0000ff">char</SPAN>* <SPAN style="COLOR: #0000ff">const</SPAN> pLastName)
{
    Person* pObj = NULL;
    <SPAN style="COLOR: #008000">//allocating memory</SPAN>
    pObj = (Person*)<SPAN style="COLOR: #0000ff">malloc</SPAN>(<SPAN style="COLOR: #0000ff">sizeof</SPAN>(Person));
    <SPAN style="COLOR: #0000ff">if</SPAN> (pObj == NULL)
    {
        <SPAN style="COLOR: #0000ff">return</SPAN> NULL;
    }
    <SPAN style="COLOR: #008000">//pointing to itself as we are creating base class object</SPAN>
    pObj->pDerivedObj = pObj;
    pObj->pFirstName = <SPAN style="COLOR: #0000ff">malloc</SPAN>(<SPAN style="COLOR: #0000ff">sizeof</SPAN>(<SPAN style="COLOR: #0000ff">char</SPAN>)*(strlen(pFirstName)+1));
    <SPAN style="COLOR: #0000ff">if</SPAN> (pObj->pFirstName == NULL)
    {
        <SPAN style="COLOR: #0000ff">return</SPAN> NULL;
    }
    <SPAN style="COLOR: #0000ff">strcpy</SPAN>(pObj->pFirstName, pFirstName);

    pObj->pLastName = <SPAN style="COLOR: #0000ff">malloc</SPAN>(<SPAN style="COLOR: #0000ff">sizeof</SPAN>(<SPAN style="COLOR: #0000ff">char</SPAN>)*(strlen(pLastName)+1));
    <SPAN style="COLOR: #0000ff">if</SPAN> (pObj->pLastName == NULL)
    {
        <SPAN style="COLOR: #0000ff">return</SPAN> NULL;
    }
    <SPAN style="COLOR: #0000ff">strcpy</SPAN>(pObj->pLastName, pLastName);

    <SPAN style="COLOR: #008000">//Initializing interface for access to functions</SPAN>
    <SPAN style="COLOR: #008000">//destructor pointing to destrutor of itself</SPAN>
    pObj->Delete = delete_Person;
    pObj->Display = Person_DisplayInfo;
    pObj->WriteToFile = Person_WriteToFile;

    <SPAN style="COLOR: #0000ff">return</SPAN> pObj;
}</PRE></DIV>
<H4><STRONG>Person对象的结构</STRONG></H4>
<P><A href="http://images.cnblogs.com/cnblogs_com/skynet/WindowsLiveWriter/C_B552/image_6.png"><IMG title=image style="BORDER-TOP-WIDTH: 0px; DISPLAY: block; BORDER-LEFT-WIDTH: 0px; FLOAT: none; BORDER-BOTTOM-WIDTH: 0px; MARGIN-LEFT: auto; MARGIN-RIGHT: auto; BORDER-RIGHT-WIDTH: 0px" height=484 alt=image src="http://images.cnblogs.com/cnblogs_com/skynet/WindowsLiveWriter/C_B552/image_thumb_2.png" width=488 border=0></A> </P>
<H4><STRONG>创建Employee对象</STRONG></H4>
<DIV><PRE><SPAN style="COLOR: #008000">//Employee.h</SPAN>

#include "<SPAN style="COLOR: #8b0000">Person.h</SPAN>"


<SPAN style="COLOR: #0000ff">typedef</SPAN> <SPAN style="COLOR: #0000ff">struct</SPAN> _Employee Employee;

<SPAN style="COLOR: #008000">//Note: interface for this class is in the base class</SPAN>
<SPAN style="COLOR: #008000">//object since all functions are virtual.</SPAN>
<SPAN style="COLOR: #008000">//If there is any additional functions in employee add</SPAN>
<SPAN style="COLOR: #008000">//interface for those functions in this structure </SPAN>
<SPAN style="COLOR: #0000ff">typedef</SPAN> <SPAN style="COLOR: #0000ff">struct</SPAN> _Employee
{
    Person* pBaseObj;
    <SPAN style="COLOR: #0000ff">char</SPAN>* pDepartment;
    <SPAN style="COLOR: #0000ff">char</SPAN>* pCompany;
    <SPAN style="COLOR: #0000ff">int</SPAN> nSalary;
    <SPAN style="COLOR: #008000">//If there is any employee specific functions; add interface here.</SPAN>
}Employee;

Person* new_Employee(<SPAN style="COLOR: #0000ff">const</SPAN> <SPAN style="COLOR: #0000ff">char</SPAN>* <SPAN style="COLOR: #0000ff">const</SPAN> pFirstName, <SPAN style="COLOR: #0000ff">const</SPAN> <SPAN style="COLOR: #0000ff">char</SPAN>* <SPAN style="COLOR: #0000ff">const</SPAN> pLastName,
        <SPAN style="COLOR: #0000ff">const</SPAN> <SPAN style="COLOR: #0000ff">char</SPAN>* <SPAN style="COLOR: #0000ff">const</SPAN> pDepartment, <SPAN style="COLOR: #0000ff">const</SPAN> <SPAN style="COLOR: #0000ff">char</SPAN>* <SPAN style="COLOR: #0000ff">const</SPAN> pCompany, 
        <SPAN style="COLOR: #0000ff">int</SPAN> nSalary);    <SPAN style="COLOR: #008000">//constructor</SPAN>
<SPAN style="COLOR: #0000ff">void</SPAN> delete_Employee(Person* <SPAN style="COLOR: #0000ff">const</SPAN> pPersonObj);    <SPAN style="COLOR: #008000">//destructor</SPAN>

<SPAN style="COLOR: #0000ff">void</SPAN> Employee_DisplayInfo(Person* <SPAN style="COLOR: #0000ff">const</SPAN> pPersonObj);
<SPAN style="COLOR: #0000ff">void</SPAN> Employee_WriteToFile(Person* <SPAN style="COLOR: #0000ff">const</SPAN> pPersonObj, <SPAN style="COLOR: #0000ff">const</SPAN> <SPAN style="COLOR: #0000ff">char</SPAN>* <SPAN style="COLOR: #0000ff">const</SPAN> pFileName);
    
<SPAN style="COLOR: #008000">//Employee.c</SPAN>
Person* new_Employee(<SPAN style="COLOR: #0000ff">const</SPAN> <SPAN style="COLOR: #0000ff">char</SPAN>* <SPAN style="COLOR: #0000ff">const</SPAN> pFirstName, <SPAN style="COLOR: #0000ff">const</SPAN> <SPAN style="COLOR: #0000ff">char</SPAN>* <SPAN style="COLOR: #0000ff">const</SPAN> pLastName,
                     <SPAN style="COLOR: #0000ff">const</SPAN> <SPAN style="COLOR: #0000ff">char</SPAN>* <SPAN style="COLOR: #0000ff">const</SPAN> pDepartment, 
                     <SPAN style="COLOR: #0000ff">const</SPAN> <SPAN style="COLOR: #0000ff">char</SPAN>* <SPAN style="COLOR: #0000ff">const</SPAN> pCompany, <SPAN style="COLOR: #0000ff">int</SPAN> nSalary)
{
    Employee* pEmpObj;
    <SPAN style="COLOR: #008000">//calling base class construtor</SPAN>
    Person* pObj = new_Person(pFirstName, pLastName);
    <SPAN style="COLOR: #008000">//allocating memory</SPAN>
    pEmpObj = <SPAN style="COLOR: #0000ff">malloc</SPAN>(<SPAN style="COLOR: #0000ff">sizeof</SPAN>(Employee));
    <SPAN style="COLOR: #0000ff">if</SPAN> (pEmpObj == NULL)
    {
        pObj->Delete(pObj);
        <SPAN style="COLOR: #0000ff">return</SPAN> NULL;
    }
    pObj->pDerivedObj = pEmpObj; <SPAN style="COLOR: #008000">//pointing to derived object</SPAN>
    
    <SPAN style="COLOR: #008000">//initialising derived class members</SPAN>
    pEmpObj->pDepartment = <SPAN style="COLOR: #0000ff">malloc</SPAN>(<SPAN style="COLOR: #0000ff">sizeof</SPAN>(<SPAN style="COLOR: #0000ff">char</SPAN>)*(strlen(pDepartment)+1));
    <SPAN style="COLOR: #0000ff">if</SPAN>(pEmpObj->pDepartment == NULL)
    {
        <SPAN style="COLOR: #0000ff">return</SPAN> NULL;
    }
    <SPAN style="COLOR: #0000ff">strcpy</SPAN>(pEmpObj->pDepartment, pDepartment);
    pEmpObj->pCompany = <SPAN style="COLOR: #0000ff">malloc</SPAN>(<SPAN style="COLOR: #0000ff">sizeof</SPAN>(<SPAN style="COLOR: #0000ff">char</SPAN>)*(strlen(pCompany)+1));
    <SPAN style="COLOR: #0000ff">if</SPAN>(pEmpObj->pCompany== NULL)
    {
        <SPAN style="COLOR: #0000ff">return</SPAN> NULL;
    }
    <SPAN style="COLOR: #0000ff">strcpy</SPAN>(pEmpObj->pCompany, pCompany);
    pEmpObj->nSalary = nSalary;
        
    <SPAN style="COLOR: #008000">//Changing base class interface to access derived class functions</SPAN>
    <SPAN style="COLOR: #008000">//virtual destructor</SPAN>
    <SPAN style="COLOR: #008000">//person destructor pointing to destrutor of employee</SPAN>
    pObj->Delete = delete_Employee;
    pObj->Display = Employee_DisplayInfo;
    pObj->WriteToFile = Employee_WriteToFile;

    <SPAN style="COLOR: #0000ff">return</SPAN> pObj;
}</PRE></DIV>
<H4><STRONG>Employee对象的结构</STRONG></H4>
<P><A href="http://images.cnblogs.com/cnblogs_com/skynet/WindowsLiveWriter/C_B552/image_8.png"><IMG title=image style="BORDER-TOP-WIDTH: 0px; DISPLAY: block; BORDER-LEFT-WIDTH: 0px; FLOAT: none; BORDER-BOTTOM-WIDTH: 0px; MARGIN-LEFT: auto; MARGIN-RIGHT: auto; BORDER-RIGHT-WIDTH: 0px" height=334 alt=image src="http://images.cnblogs.com/cnblogs_com/skynet/WindowsLiveWriter/C_B552/image_thumb_3.png" width=604 border=0></A> </P>
<P>注意：从基类函数到派生类函数改变了接口（VTable）中指针位置。现在我们可以从基类（多态）访问派生类函数。我们来看如何使用多态。</P>
<DIV><PRE>Person* PersonObj = new_Person("<SPAN style="COLOR: #8b0000">Anjali</SPAN>", "<SPAN style="COLOR: #8b0000">Jaiswal</SPAN>");
Person* EmployeeObj = new_Employee("<SPAN style="COLOR: #8b0000">Gauri</SPAN>", "<SPAN style="COLOR: #8b0000">Jaiswal</SPAN>","<SPAN style="COLOR: #8b0000">HR</SPAN>", "<SPAN style="COLOR: #8b0000">TCS</SPAN>", 40000);

<SPAN style="COLOR: #008000">//accessing person object</SPAN>

<SPAN style="COLOR: #008000">//displaying person info</SPAN>
PersonObj->Display(PersonObj);
<SPAN style="COLOR: #008000">//writing person info in the persondata.txt file</SPAN>
PersonObj->WriteToFile(PersonObj,"<SPAN style="COLOR: #8b0000">persondata.txt</SPAN>");
<SPAN style="COLOR: #008000">//calling destructor</SPAN>
PersonObj->Delete(PersonObj);

<SPAN style="COLOR: #008000">//accessing to employee object</SPAN>

<SPAN style="COLOR: #008000">//displaying employee info</SPAN>
EmployeeObj->Display(EmployeeObj);
<SPAN style="COLOR: #008000">//writing empolyee info in the employeedata.txt file</SPAN>
EmployeeObj->WriteToFile(EmployeeObj, "<SPAN style="COLOR: #8b0000">employeedata.txt</SPAN>");
<SPAN style="COLOR: #008000">//calling destrutor</SPAN>
EmployeeObj->Delete(EmployeeObj);</PRE></DIV>
<H4><STRONG>结论</STRONG></H4>
<P>使用上面描述的简单的额外代码能是过程式C语言有多态和继承的特性。我们简单的使用函数指针创建一个VTable和在基类和派生类对象中交叉维护引用。用这些简单的步骤，我们在C中可以实现继承和多态。</P></DIV>                                   </div>
            <!-- <div class="Blog_con3_1">管理员在2009年8月13日编辑了该文章文章。</div> -->
            <div class="Blog_con2_1 Blog_con3_2">
              <div>
			  <!--<img src="/image/default/tu_8.png">-->
			  <!-- JiaThis Button BEGIN -->
				<div class="bdsharebuttonbox"><A class=bds_more href="#" data-cmd="more"></A><A class=bds_qzone title=分享到QQ空间 href="#" data-cmd="qzone"></A><A class=bds_tsina title=分享到新浪微博 href="#" data-cmd="tsina"></A><A class=bds_tqq title=分享到腾讯微博 href="#" data-cmd="tqq"></A><A class=bds_renren title=分享到人人网 href="#" data-cmd="renren"></A><A class=bds_weixin title=分享到微信 href="#" data-cmd="weixin"></A></div>
<script>window._bd_share_config={"common":{"bdSnsKey":{},"bdText":"","bdMini":"2","bdMiniList":false,"bdPic":"","bdStyle":"0","bdSize":"16"},"share":{}};with(document)0[(getElementsByTagName('head')[0]||body).appendChild(createElement('script')).src='http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion='+~(-new Date()/36e5)];</script>
				<!-- JiaThis Button END -->
			  </div>
              阅读(12942) | 评论(2) | 转发(9) |
			                <div class="HT_line3"></div>
            </div>
            <div class="Blog_con3_3">
              <div><span id='digg_num'>2</span><a href="javascript:void(0)" id='digg' bid='66146' url='/blog/digg.html' ></a></div>
              <p>上一篇：<a href="/uid-20940095-id-66145.html">Lguest 启动时内存布局</a></p>
              <p>下一篇：<a href="/uid-20940095-id-66147.html">piggy 作用</a></p>
            </div>
          </div>
          <div class="Blog_con3_4">
            <div class="Blog_tit2 Blog_tit6">相关热门文章</div>
			            <ul class="Blog_ul7">
						  <li><span class="Blog_span7"></span><a href="/uid-26615473-id-3056538.html" title='test123' target='blank' >test123</a></li>
						  <li><span class="Blog_span7"></span><a href="/uid-23629988-id-3018793.html" title='编写安全代码——小心有符号数的右移操作' target='blank' >编写安全代码——小心有符号数...</a></li>
						  <li><span class="Blog_span7"></span><a href="/uid-233938-id-162619.html" title='使用openssl api进行加密解密' target='blank' >使用openssl api进行加密解密...</a></li>
						  <li><span class="Blog_span7"></span><a href="/uid-233938-id-162628.html" title='一段自己打印自己的c程序' target='blank' >一段自己打印自己的c程序...</a></li>
						  <li><span class="Blog_span7"></span><a href="/uid-22889411-id-59688.html" title='彻底搞定C语言指针详解-完整版-时候初学者-必备' target='blank' >彻底搞定C语言指针详解-完整版...</a></li>
			            </ul>
            <ul class="Blog_ul7">
						  <li><span class="Blog_span6"></span><a href="http://ask.chinaunix.net/question/785970" title='linux dhcp  peizhi roc' target='blank'  >linux dhcp  peizhi roc</a></li>
						  <li><span class="Blog_span6"></span><a href="http://ask.chinaunix.net/question/785964" title='关于Unix文件的软链接' target='blank'  >关于Unix文件的软链接</a></li>
						  <li><span class="Blog_span6"></span><a href="http://ask.chinaunix.net/question/785935" title='求教这个命令什么意思，我是新手，刚刚学习solaris' target='blank'  >求教这个命令什么意思，我是新...</a></li>
						  <li><span class="Blog_span6"></span><a href="http://ask.chinaunix.net/question/785919" title='sed -e &quot;/grep/d&quot; 是什么意思？谢谢' target='blank'  >sed -e &quot;/grep/d&quot; 是什么意思...</a></li>
						  <li><span class="Blog_span6"></span><a href="http://ask.chinaunix.net/question/785702" title='谁能够帮我解决LINUX  2.6  10版本驱动' target='blank'  >谁能够帮我解决LINUX  2.6  10...</a></li>
			            </ul>
            <div class="clear"></div>
          </div>
		  <!--
          <div class="Blog_con3_4 Blog_con3_5">
            <div class="Blog_tit2 Blog_tit7">热门推荐</div>
            <ul>
			              <li><a href="" title="" target='blank' ></a></li>
			            </ul>
          </div>
		  -->
        </div>
      </div>
      <div class="Blog_right1_7" id='replyList'>
		<div class="Blog_tit3">给主人留下些什么吧！~~</div>
														<!--包含引用-->
					<div class="Blog_right1_8">
					  <div class="Blog_right_img1"><a href='/uid/30195392.html' ><img src="http://passport.ixpub.net/data/avatar/030/19/53/92_avatar_small.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'" /></a></div>
					  <div class="Blog_right_font1">
						<p class="Blog_p5"><span><a href='/uid/30195392.html' >爱我168</a></span>2016-07-22 10:49:48</p>
												<p class="Blog_p7"><a href='/uid/30546472.html'>wogengbang</a>：EmployeeObj-&gt;Delete(EmployeeObj);&nbsp;怎么不用EmployeeObj-&gt;pBaseObj-&gt;Delete(EmployeeObj)&nbsp;。<br />EmployeeObj-&gt;Delete(EmployeeObj);这句怎么理解。</p>
												<p class="Blog_p8">理解了“基类”和“派生类”交叉引用和维护实现继承和多态后，这个问题就简单了。<br />pBaseObj是指向Person结构体的，EmployeeObj-&gt;pBaseObj-&gt;Delete(EmployeeObj)&nbsp;那么调用的就是基类的Delete函数；<br />Person*&nbsp;EmployeeObj&nbsp;&nbsp;EmployeeObj是指向Person结构体的，但在Person*&nbsp;EmployeeObj&nbsp;=&nbsp;new_Employee(\&quot;Gauri\&quot;,&nbsp;\&quot;Jaiswal\&quot;,\&quot;HR\&quot;,&nbsp;\&quot;TCS\&quot;,&nbsp;40000);后，EmployeeObj就指向了<br />_Employee结构体，注：初始化里有这么一句pObj-&gt;pDerivedObj&nbsp;=&nbsp;pEmpObj;&nbsp;//pointing&nbsp;to&nbsp;derived&nbsp;object；<br />因此呢，EmployeeObj-&gt;Delete(EmployeeObj)调用的实际就是_Employee结构体的Delete函数；<br />这就实现了C中所谓的多态（指向“基类”的Em</p><span class="span_text1"><a href="javascript:void(0);" class="Blog_a10" toid='30195392' bid='66146' cid='626683' tname='爱我168' >回复</a> | <a href="javascript:;" onclick="linkto();showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');" class='box_report' >举报</a></span>
						<!-- 评论占位框-->
						<div class='z_move_comment' style='display:none'></div>
					  </div>
					  <div class="Blog_line1"></div>
					</div>
																<!--不包含引用-->
					<div class="Blog_right1_8">
					  <div class="Blog_right_img1"><a href='/uid/30546472.html' ><img src="http://passport.ixpub.net/data/avatar/030/54/64/72_avatar_small.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'" /></a></div>
					  <div class="Blog_right_font1">
                                                                                            <p class="Blog_p5"><span><a href='/uid/30546472.html' ><span style="color:black">wogengbang<em></em></span></a></span>2015-10-30 04:15:12</p>
                                              						<p class="Blog_p6">EmployeeObj-&gt;Delete(EmployeeObj);&nbsp;怎么不用EmployeeObj-&gt;pBaseObj-&gt;Delete(EmployeeObj)&nbsp;。<br />EmployeeObj-&gt;Delete(EmployeeObj);这句怎么理解。</p>                                     
						<div class="div1"><a href="javascript:void(0);" class="Blog_a10"  toid='30546472' bid='66146' cid='625077' tname='wogengbang'>回复</a> | <a href="javascript:;" onclick="linkto();showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');" class='box_report'>举报</a></div>
						<!-- 评论占位框-->
						<div class='z_move_comment' style='display:none'>
						</div>
					  </div>
					  <div class="Blog_line1"></div>
					</div>
											<!-- 评论分页-->
		<div class="Blog_right1_6 Blog_right1_12">
        		</div>
		<!-- 评论分页-->
        <div class="Blog_right1_10">
          <div class="Blog_tit3">评论热议</div>
		  		 <!--未登录 -->
        <div class="Blog_right1_8">
          <div class="nologin_con1"> 请登录后评论。
            <p><a href="/site/login.html"  onclick="linkto()">登录</a> <a href="http://sso.chinaunix.net/Register?return_url=http%3A%2F%2Ft.cublog.com%2F">注册</a></p>
          </div>
        </div>
        <br>
        <div>
            <div style="float:left;margin-left:70px;margin-right:10px;">
             <script type="text/javascript">
            var cpro_id = "u1625692";
            </script>
            <script src="http://cpro.baidustatic.com/cpro/ui/c.js" type="text/javascript"></script>
            </div>
            <div style="margin-left:10px;">
            <script type="text/javascript">
            var cpro_id = "u1625694";
            </script>
            <script src="http://cpro.baidustatic.com/cpro/ui/c.js" type="text/javascript"></script>
            </div>
        </div>
		
        </div>
      </div>
    </div>
  </div>
  <input type='hidden' id='report_url' value='/blog/ViewReport.html' />

<script type="text/javascript">
  	//测试字符串的长度 一个汉字算2个字节
	function mb_strlen(str)
	{
		var len=str.length;
		var totalCount=0;
		for(var i=0;i<len;i++)
		{
			var c = str.charCodeAt(i);
			if ((c >= 0x0001 && c <= 0x007e) || (0xff60<=c && c<=0xff9f)) {
				totalCount++;
			}else{
				totalCount+=2;
			}
		}
		return totalCount;
	}
	/*
	var Util = {};
	Util.calWbText = function (text, max){
		if(max === undefined)
			max = 500;
		var cLen=0;
		var matcher = text.match(/[^\x00-\xff]/g),
			wlen  = (matcher && matcher.length) || 0;
		//匹配url链接正则 http://***
		var pattern = /http:\/\/([\w-]+\.)+[\w-]+(\/*[\w-\.\/\?%&=][^\s^\u4e00-\u9fa5]*)?/gi;
		//匹配的数据存入数组
		var arrPt = new Array();
		var i = 0;
		while((result = pattern.exec(text)) != null){
			arrPt[i] = result[0];
			i++;
		}
		//替换掉原文本中的链接
		for(var j = 0;j<arrPt.length;j++){
			text = text.replace(arrPt[j],"");
		}
		//减掉链接所占的长度
		return Math.floor((max*2 - text.length - wlen)/2 - 12*i);
	};
	*/
	var allowComment = '0';
	
	//举报弹出层
	function showJuBao(url, cid){
		
			$.cover(false);
			asyncbox.open({
				id  : 'report_thickbox',
				url : url,
				title : '举报违规',
				width : 378,
				height : 240,
				scroll : 'no',
				data : {
					'cid'	 : cid,
					'idtype' : 2 ,
                                        'blogurl' : window.location.href
				},
				callback : function(action){
					if(action == 'close'){
						$.cover(false);
					}
				}
			});
	}

	$(function(){

		//创建管理员删除的弹出层
		$('#admin_article_del').click(function(){
			$.cover(false);
			asyncbox.open({
				id : 'class_thickbox',
				html : '<div class="HT_layer3_1"><ul><li class="HT_li1">操作原因：<select class="HT_sel7" id="del_type" name="del_type"><option value="广告文章">广告文章</option><option value="违规内容">违规内容</option><option value="标题不明">标题不明</option><option value="文不对题">文不对题</option></select></li><li class="HT_li1" ><input class="HT_btn4" id="admin_delete"  type="button" /></li></ul></div>',
				title : '选择类型',
				width : 300,
				height : 150,
				scroll : 'no',
				callback : function(action){
					if(action == 'close'){
						$.cover(false);
					}
				}
			});
		});
		$('#admin_delete').live('click' , function(){
			///blog/logicdel/id/3480184/url/%252Fblog%252Findex.html.html
			var type = $('#del_type').val();
			var url = '/blog/logicdel/id/66146/url/%252Fuid%252F20940095.html.html';
			window.location.href= url + '?type=' + type;
		});


		//顶  js中暂未添加&过滤 
		$('#digg').live('click' , function(){

			if(isOnLine == '' )
			{
				//showErrorMsg('登录之后才能进行此操作' , '消息提示');
				showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				return false;
			}

			var bid = $('#digg').attr('bid');
			var url = $('#digg').attr('url');

			var digg_str = $.cookie('digg_id');
			if(digg_str != null)
			{
				var arr= new Array(); //定义一数组

				arr = digg_str.split(","); //字符分割     
				for( i=0 ; i < arr.length ; i++ )   
				{   
					if(bid == arr[i])
					{
						showErrorMsg('已经赞过该文章', '消息提示'); 
						return false;
					}
				} 
			}
			$.ajax({
				type:"POST",
				url:url,	
				data: {
					'bid' : bid 
				},
				dataType: 'json',
				success:function(msg){
					if(msg.error == 0)
					{
						var num = parseInt($('#digg_num').html(),10);
						num += 1;
						$('#digg_num').html(num);
						$('#digg').die();

						if(digg_str == null)
						{
							$.cookie('digg_id', bid, {expires: 30 , path: '/'});
						}
						else
						{
							$.cookie('digg_id', digg_str + ',' + bid, {expires: 30 , path: '/'});
						}
						showSucceedMsg('谢谢' , '消息提示');
					}
					else if(msg.error == 1)
					{
						//showErrorMsg(msg.error_content , '消息提示'); 
						showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
					}
					else if(msg.error == 2)
					{
						showErrorMsg(msg.error_content , '消息提示'); 
					}
				}
			});
		});
		//举报弹出层
		/*$('.box_report').live('click' , function(){
			if(isOnLine == '' )
			{
				//showErrorMsg('登录之后才能进行此操作' , '消息提示');
				showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				return false;
			}
			var url = $('#report_url').val();
			var cid = $(this).attr('cid');
			$.cover(false);
			asyncbox.open({
				id  : 'report_thickbox',
				url : url,
				title : '举报违规',
				width : 378,
				height : 240,
				scroll : 'no',
				data : {
					'cid'	 : cid,
					'idtype' : 2 
				},
				callback : function(action){
					if(action == 'close'){
						$.cover(false);
					}
				}
			});
		});*/


		//评论相关代码
		
		//点击回复显示评论框
		$('.Blog_a10').live('click' , function(){
			if(isOnLine == '' )
			{
				//showErrorMsg('登录之后才能进行此操作' , '消息提示');
				showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				return false;
			}

			if(allowComment == 1)
			{
				showErrorMsg('该博文不允许评论' , '消息提示'); 
				return false;
			}
			var tid = $(this).attr('toid');//留言作者id
			var bid = $(this).attr('bid');//blogid
			var cid = $(this).attr('cid');//留言id
			var tname = $(this).attr('tname');
                         			var tpl  = '<div class="Blog_right1_9">';
				tpl +=	 '<div class="div2">';
				tpl +=     '<textarea name="" cols="" rows="" class="Blog_ar1_1" id="rmsg">文明上网，理性发言...</textarea>';
				tpl +=	 '</div>';
				tpl +=   '<div class="div3">';
				tpl +=		'<div class="div3_2"><a href="javascript:void(0);" class="Blog_a11" id="quota_sbumit" url="/Comment/PostComment.html" tid="'+tid+'" bid="'+bid+'" cid="'+cid+'" tname="'+tname+'" ></a><a href="javascript:void(0)" id="qx_comment" class="Blog_a12"></a></div>';
				tpl +=		'<div class="div3_1"><a href="javascript:void(0);" id="mface"><span></span>表情</a></div>';
				tpl +=		'<div class="clear"></div>';
				tpl +=	 '</div>';
				tpl +=  '</div>';
                                 			$('.z_move_comment').html('');
			$(this).parents('.Blog_right1_8').find('.z_move_comment').html(tpl).show();
		});
		//引用的评论提交
		$('#quota_sbumit').live('click' , function(){

			if(isOnLine == '' )
			{
				//showErrorMsg('登录之后才能进行此操作' , '消息提示');
				showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				return false;
			}

			var bid   = $(this).attr('bid');
			var tid   = $(this).attr('tid');//被引用人的id
			var qid   = $(this).attr('cid');//引用的id
			var url = $(this).attr('url');
			var text = $('#rmsg').val();
			var tname = $(this).attr('tname');
			if(text == '' || text=='文明上网，理性发言...')
			{
				showErrorMsg('评论内容不能为空！' , '消息提示'); 
				return false;
			}
			else
			{
				if(mb_strlen(text) > 1000){
					showErrorMsg('评论内容不能超过500个汉字' , '消息提示'); 
					return false;
				}
			}
		    $.ajax({
		        type: "post",
			    url: url ,
			    data: {'bid': bid , 'to' : tid , 'qid' : qid , 'text': text , 'tname' : tname },
				dataType: 'json',
			    success: function(data){
				    if(data.code == 1){
						var tpl =  '<div class="Blog_right1_8">';
							tpl+=     '<div class="Blog_right_img1"><a href="' +data.info.url+ '" >' + data.info.header + '</a></div>';
							tpl+=     '<div class="Blog_right_font1">';
							tpl+=         '<p class="Blog_p5"><span><a href="' +data.info.url+ '" >' + data.info.username + '</a></span>' + data.info.dateline + '</p>';
							tpl+=         '<p class="Blog_p7"><a href="' + data.info.quota.url + '">' + data.info.quota.username + '</a>：'+ data.info.quota.content + '</p>';
							tpl+=         '<p class="Blog_p8">' + data.info.content + '</p><span class="span_text1"><a href="javascript:void(0);" class="Blog_a10" toid=' + data.info.fuid + ' bid=' + data.info.bid + ' cid=' + data.info.cid + '  tname = ' + data.info.username + ' >回复</a> | 　<a class="comment_del_mark" style="cursor:pointer" url="' + data.info.delurl + '" >删除</a>　| 　<a href="javascript:showJuBao(\'/blog/ViewReport.html\','+data.info.cid+')" class="box_report" cid="' + data.info.cid + '" >举报</a></span></div>';
							tpl+=         '<div class="z_move_comment" style="display:none"></div>';
							tpl+=	      '<div class="Blog_line1"></div></div>';
							$('#replyList .Blog_right1_8:first').before(tpl);
							$('.z_move_comment').html('').hide();
				    }
					else if(data.code == -1){
						//showErrorMsg(data.info , '消息提示'); 
						showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
			        }
                },
			    error: function(){//请求出错处理
                        
                }
			});
		});
		//底部发表评论
		$('#submitmsg').click(function(){
			if(allowComment == 1)
			{
				showErrorMsg('该博文不允许评论' , '消息提示'); 
				return false;
			}
			var bid   = $(this).attr('bid');
			var toid  = $(this).attr('toid');
			var text = $('#reply').val();
			var url = $(this).attr('url');
			if(text == '' || text=='文明上网，理性发言...')
			{
				showErrorMsg('评论内容不能为空！' , '消息提示'); 
				return false;
			}
			else
			{
				if(mb_strlen(text) > 1000){
					showErrorMsg('评论内容不能超过500个汉字' , '消息提示'); 
					return false;
				}
			}
		    $.ajax({
		        type: "post",
			    url: url ,
			    data: {'bid': bid , 'to' : toid ,'text': text},
				dataType: 'json',
			    success: function(data){
				    if(data.code == 1)
					{
						var tpl   = '<div class="Blog_right1_8">';
							tpl  +=   '<div class="Blog_right_img1"><a href="' +data.info.url+ '" >' + data.info.header + '</a></div>';
							tpl  +=	  '<div class="Blog_right_font1">';
							tpl  +=       '<p class="Blog_p5"><span><a href="' +data.info.url+ '" >' + data.info.username + '</a></span>' + data.info.dateline + '</p>';
							tpl  +=       '<p class="Blog_p6">' + data.info.content + '</p>';
							tpl  +=		  '<div class="div1"><a href="javascript:void(0);" class="Blog_a10"  toid=' + data.info.fuid + ' bid=' + data.info.bid + ' cid=' + data.info.cid + '>回复</a> | 　<a class="comment_del_mark" style="cursor:pointer" url="' + data.info.delurl + '">删除</a>　| 　<a href="javascript:showJuBao(\'/blog/ViewReport.html\','+data.info.cid+')" class="box_report" cid="' + data.info.cid + '">举报</a></div>';
							tpl  +=		  '<div class="z_move_comment" style="display:none"></div>';
							tpl  +=    '</div><div class="Blog_line1"></div></div>';
							$('.Blog_tit3:first').after(tpl);
							$('#reply').val('文明上网，理性发言...');
					}
					else if(data.code == -1)
					{
						showErrorMsg(data.info , '消息提示'); 
			        }
                },
			    error: function(){//请求出错处理
                        
                }
		    });
			
		});
		//底部评论重置
		$('#reset_comment').click(function(){
			$('#reply').val('文明上网，理性发言...');
		});
		//取消回复
		$('#qx_comment').live('click' , function(){
			$('.z_move_comment').html('').hide();
		});


		$('#rmsg, #reply').live({
		    focus:function(){
			    if($(this).val() == '文明上网，理性发言...'){
			        $(this).val('');
			    }
			},
			blur:function(){
		        if($(this).val() == ''){
			        $(this).val('文明上网，理性发言...');
			    }
			}
		});
		//删除留言确认
		$('.comment_del_mark').live('click' , function(){
			var url = $(this).attr('url');
			asyncbox.confirm('删除留言','确认', function(action){
				if(action == 'ok')
				{
					location.href = url;
				}
			});
		});
		//删除时间确认
		$('.del_article_id').click(function(){
			var delurl = $(this).attr('delurl');
			asyncbox.confirm('删除文章','确认', function(action){
				if(action == 'ok')
				{
					location.href = delurl;
				}
			});
		});
		/*
		//字数限制
		$('#rmsg, #reply').live('keyup', function(){
			var id = $(this).attr('id');
			var left = Util.calWbText($(this).val(), 500);
			var eid = '#errmsg';
			
			if(id == 'reply') eid =  '#rerrmsg';
			if (left >= 0)
		        $(eid).html('您还可以输入<span>' + left + '</span>字');
		    else
		        $(eid).html('<font color="red">您已超出<span>' + Math.abs(left) + '</span>字 </font>');
		});
		*/
		//加载表情
	    $('#face').qqFace({id : 'facebox1', assign : 'reply', path : '/image/qqface/'});
	    $('#mface').qqFace({id : 'facebox', assign : 'rmsg', path:'/image/qqface/'});
	    
		/*
		$('#class_one_id').change(function(){
			alert(123213);
			var id = parseInt($(this).val() , 10);
			if(id == 0) return false;
			$('.hidden_son_class span').each(function( index , dom ){
				if( dom.attr('cid')  == id )
				{
				}
			});
		});
		*/
		//转载文章
		var turn_url = "/blog/viewClassPart.html";
		$('#repost_bar').click(function(){
			if(isOnLine == '' )
			{
				//showErrorMsg('登录之后才能进行此操作' , '消息提示');
				showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				return false;
			}
			var id = $(this).attr('bid');
			asyncbox.open({
				id  : 'turn_class_thickbox',
				url : turn_url,
				title : '转载文章',
				width : 330,
				height : 131,
				scroll : 'no',
				data : {
					'id'	 : id
				},
				callback : function(action){
					if(action == 'close'){
						$.cover(false);
					}
				}
			});
		});
		/*
	    //转发文章
	    $('#repost_bar').live('click' , function(){
			if(isOnLine == '' )
			{
				//showErrorMsg('登录之后才能进行此操作' , '消息提示');
				showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				return false;
			}
	    	var bid  = $(this).attr('bid');
	    	var url  = $(this).attr('url');
	    	asyncbox.confirm('转载文章','确认', function(action){
	    	  if(action == 'ok'){
	    	    $.ajax({
				type:"POST",
				url:url,	
				data: {
					'bid' : bid 
				},
				dataType: 'json',
				success:function(msg){
				  if(msg.error == 0){
				    showSucceedMsg('转发成功！', '消息提示');
				  }else if(msg.error == 1){
				    //location.href = '/index.php?r=site/login';
					showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				  }else{
				    showErrorMsg(msg.error_content, '消息提示');
			      }
				}
			  });
	    	  }
	    	});

		});
		*/

	});
</script>
<!--该部分应该放在输出代码块的后面才起作用 -->
<script type="text/javascript">

SyntaxHighlighter.autoloader(
	'applescript			/highlight/scripts/shBrushAppleScript.js',
	'actionscript3 as3		/highlight/scripts/shBrushAS3.js',
	'bash shell				/highlight/scripts/shBrushBash.js',
	'coldfusion cf			/highlight/scripts/shBrushColdFusion.js',
	'cpp c					/highlight/scripts/shBrushCpp.js',
	'c# c-sharp csharp		/highlight/scripts/shBrushCSharp.js',
	'css					/highlight/scripts/shBrushCss.js',
	'delphi pascal			/highlight/scripts/shBrushDelphi.js',
	'diff patch pas			/highlight/scripts/shBrushDiff.js',
	'erl erlang				/highlight/scripts/shBrushErlang.js',
	'groovy					/highlight/scripts/shBrushGroovy.js',
	'java					/highlight/scripts/shBrushJava.js',
	'jfx javafx				/highlight/scripts/shBrushJavaFX.js',
	'js jscript javascript	/highlight/scripts/shBrushJScript.js',
	'perl pl				/highlight/scripts/shBrushPerl.js',
	'php					/highlight/scripts/shBrushPhp.js',
	'text plain				/highlight/scripts/shBrushPlain.js',
	'py python				/highlight/scripts/shBrushPython.js',
	'ruby rails ror rb		/highlight/scripts/shBrushRuby.js',
	'scala					/highlight/scripts/shBrushScala.js',
	'sql					/highlight/scripts/shBrushSql.js',
	'vb vbnet				/highlight/scripts/shBrushVb.js',
	'xml xhtml xslt html	/highlight/scripts/shBrushXml.js'
);
SyntaxHighlighter.all();


function code_hide(id){
	var code = document.getElementById(id).style.display;
	if(code == 'none'){
		document.getElementById(id).style.display = 'block';
	}else{
		document.getElementById(id).style.display = 'none';
	}
}
</script>
<!--回顶部js2011.12.30-->
<script language="javascript">
 lastScrollY=0;
 function heartBeat(){
 var diffY;
 if (document.documentElement && document.documentElement.scrollTop)
     diffY = document.documentElement.scrollTop;
 else if (document.body)
     diffY = document.body.scrollTop
 else
     {/*Netscape stuff*/}
 percent=.1*(diffY-lastScrollY);
 if(percent>0)percent=Math.ceil(percent);
 else percent=Math.floor(percent);
 document.getElementById("full").style.top=parseInt(document.getElementById("full").style.top)+percent+"px";
 lastScrollY=lastScrollY+percent;
 if(lastScrollY<200)
 {
 document.getElementById("full").style.display="none";
 }
 else
 {
 document.getElementById("full").style.display="block";
 }
 }
 var gkuan=document.body.clientWidth;
 var ks=(gkuan-960)/2-30;
 suspendcode="<div id=\"full\" style='right:4px;POSITION:absolute;TOP:500px;z-index:100;width:20px; height:50px;cursor:pointer;'><a href=\"javascript:void(0)\" onclick=\"window.scrollTo(0,0);\"><img src=\"\/image\/top.png\" /></a></div>"
 document.write(suspendcode);
 window.setInterval("heartBeat()",1);
 </script>  <!-- footer -->
  <div class="Blog_footer" style='clear:both'>
    <div><a href="http://www.chinaunix.net/about/index.shtml" target="_blank" rel="nofollow">关于我们</a> | <a href="http://www.it168.com/bottomfile/it168.shtml" target="_blank" rel="nofollow">关于IT168</a> | <a href="http://www.chinaunix.net/about/connect.html" target="_blank" rel="nofollow">联系方式</a> | <a href="http://www.chinaunix.net/about/service.html" target="_blank" rel="nofollow">广告合作</a> | <a href="http://www.it168.com//bottomfile/flgw/fl.htm" target="_blank" rel="nofollow">法律声明</a> | <a href="http://sso.chinaunix.net/Register?return_url=http%3A%2F%2Fblog.chinaunix.net%2F
" target="_blank" rel="nofollow">免费注册</a>
      <p>Copyright  2001-2010 ChinaUnix.net All Rights Reserved 北京皓辰网域网络信息技术有限公司. 版权所有 </p>
      <div>感谢所有关心和支持过ChinaUnix的朋友们
        <p>京ICP证041476号 京ICP证060528号</p>
      </div>
    </div>
  </div>
</div>
<script language="javascript">

//全局错误提示弹出框
function showErrorMsg(content, title, url){
	var url = url || '';
	var title = title || '消息提示';
	var html = '';
	html += '<div class="HT_layer3_1 HT_layer3_2"><ul><li><p><span class="login_span1"></span>' + content + '</p></li>';
	if(url == '' || url.length == 0){
		html += '<li class="HT_li1"><input type="button" class="HT_btn2"  onclick=\'close_windows("error_msg")\'></li>';	
	} else {
		html += '<li class="HT_li1"><input type="button" class="login_btn1" onclick="location.href=\'' + url + '\'"></li>';
	}
	html += '</ul></div>';
	$.cover(true);
	   asyncbox.open({
		 id: 'error_msg',
		 title : title,
		 html : html,
		 'callback' : function(action){
			 if(action == 'close'){
				 $.cover(false);
			 }
		 }
	});
}

//全局正确提示
function showSucceedMsg(content, title , url ){
	var url = url || '';
	var title = title || '消息提示';
	var html = '';
	html += '<div class="HT_layer3_1 HT_layer3_2"><ul><li><p><span class="login_span2"></span>' + content + '</p></li>';
	if(url == '' || url.length == 0){
		html += '<li class="HT_li1"><input type="button" class="HT_btn2"  onclick=\'close_windows("error_msg")\'></li>';	
	} else {
		html += '<li class="HT_li1"><input type="button" class="HT_btn2" onclick="location.href=\'' + url + '\'"></li>';
	}
	html += '</ul></div>';
	$.cover(true);
	asyncbox.open({
		 id: 'error_msg',
		 title : title,
		 html : html,
		 'callback' : function(action){
			 if(action == 'close'){
				 $.cover(false);
			 }
		 }
	});
}

//关闭指定id的窗口
function close_windows(id){
	$.cover(false);
	$.close(id);
}


//公告
var tID;
var tn;                        // 高度
var nStopTime = 5000;        // 不同行间滚动时间隔的时间，值越小，移动越快
var nSpeed = 50;            // 滚动时，向上移动一像素间隔的时间，值越小，移动越快
var isMove = true;
var nHeight = 25;
var nS = 0;
var nNewsCount = 3;

/**
 * n 用于表示是否为第一次运行
 **/
function moveT(n)
{
    clearTimeout(tID)
    var noticev2 = document.getElementById("noticev2")
    nS = nSpeed;
    
    // 只在第一次调用时运行，初始化环境（有没有参数）
    if (n)
    {
        // 设置行高
        noticev2.style.lineHeight = nHeight + "px";
        // 初始化显示位置
        tn = 0;
        // 刚进入时在第一行停止时间
        nS = nStopTime;
    }
    
    // 判断鼠标是否指向层
    if (isMove)
    {
        // 向上移动一像素
        tn--;
        // 如果移动到最下面一行了，则移到顶行
        if (Math.abs(tn) == nNewsCount * nHeight)
        {
            tn = 0;
        }
        // 设置位置
        noticev2.style.marginTop = tn + "px";
        // 完整显示一行时，停止一段时间
        if (tn % nHeight == 0)
        {
            nS = nStopTime;
        }
    }

    tID = setTimeout("moveT()", nS);
}
moveT(1);    // 此处可以传入任何参数
</script>
<script language="javascript" src="http://stat.it168.com/pv.js"></script>
<script>
function sendPV(){
    var pvTrack = new PvTrack();
    pvTrack.type = 35; // 频道类别ID
    pvTrack.channel = 189; // 频道ID
    pvTrack.pageType = 0;
    pvTrack.track();
}
window.setTimeout("sendPV()", 1000);
</script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-20237423-2']);
  _gaq.push(['_setDomainName', '.chinaunix.net']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
<script type="text/javascript">
var _bdhmProtocol = (("https:" == document.location.protocol) ? " https://" : " http://");
document.write(unescape("%3Cscript src='" + _bdhmProtocol + "hm.baidu.com/h.js%3F0ee5e8cdc4d43389b3d1bfd76e83216b' type='text/javascript'%3E%3C/script%3E"));

function linkto(){
    setCookie("returnUrl", location.href, 1475131282, "/");
}
function linktoOut(){
    setCookie("returnOutUrl", location.href, 1475131282, "/");
}
//JS写COOKIE
function setCookie(name, value, expires, path, domain){
	if(!arguments[2]) expires = 3600 * 24;
	if(!arguments[3]) path = "";
	if(!arguments[4]) domain = "";
	var str=name+"="+escape(value);
	if(expires!=""){
		var date=new Date();
		date.setTime(date.getTime()+expires*1000);
		str+=";expires="+date.toGMTString();
	}
	if(path!=""){
		str+=";path="+path;//指定可访问cookie的目录
	}
	if(domain!=""){
		str+=";domain="+domain;//指定可访问cookie的域
	}
	document.cookie = str;
}

</script>
<script type="text/javascript" src="/js/jquery.qqFace.js"></script>
</body>
</html>
