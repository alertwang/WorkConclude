<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh-CN" dir="ltr">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
    <title>Android 编译大全 - quanminchaoren - ITeye技术网站</title>
    <meta name="description" content="Android编译大全（一）  1.  编译前的准备  1.1. 编译环境准备  v  先构建一个Ubuntu 9.10虚拟机  v  在虚拟机中确认下面的包是否已经安装：  n  sudo apt-get install build-essential  n  sudo apt-get install make  n  sudo apt-get install gcc  n  sudo apt-g ..." />
    <meta name="keywords" content="Android, Java, Linux, Git, Flex Android 编译大全" />
    <link rel="shortcut icon" href="/images/favicon.ico" type="image/x-icon" />
    <link rel="search" type="application/opensearchdescription+xml" href="/open_search.xml" title="ITeye" />
    <link href="/rss" rel="alternate" title="quanminchaoren" type="application/rss+xml" />
    <link href="http://www.iteye.com/stylesheets/blog.css?1470389668" media="screen" rel="stylesheet" type="text/css" />
<link href="http://www.iteye.com/stylesheets/themes/blog/blue.css?1448702469" media="screen" rel="stylesheet" type="text/css" />
    <script src="http://www.iteye.com/javascripts/application.js?1448702469" type="text/javascript"></script>    
    <script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-535605-1']);
  _gaq.push(['_setDomainName', 'iteye.com']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>


      <link href="http://www.iteye.com/javascripts/syntaxhighlighter/SyntaxHighlighter.css?1448702469" media="screen" rel="stylesheet" type="text/css" />
  <script src="http://www.iteye.com/javascripts/syntaxhighlighter/shCoreCommon.js?1448702469" type="text/javascript"></script>
<script src="http://www.iteye.com/javascripts/hotkey.js?1448702469" type="text/javascript"></script>
  <script src="http://www.iteye.com/javascripts/code_favorites.js?1448702469" type="text/javascript"></script>
<script src="http://www.iteye.com/javascripts/weiboshare.js?1448702469" type="text/javascript"></script>
    
  </head>
  <body>
    <div id="header">
	      <div id="blog_site_nav">
  <a href="http://www.iteye.com/" class="homepage">首页</a>
  <a href="http://www.iteye.com/news">资讯</a>
  <a href="http://www.iteye.com/magazines">精华</a>
  <a href="http://www.iteye.com/forums">论坛</a>
  <a href="http://www.iteye.com/ask">问答</a>
  <a href="http://www.iteye.com/blogs">博客</a>
  <a href="http://www.iteye.com/blogs/subjects">专栏</a>
  <a href="http://www.iteye.com/groups">群组</a>
  <a href="#" onclick="return false;" id="msna"><u>更多</u> <small>▼</small></a>
  <div class="quick_menu" style="display:none;">
    <a target="_blank" href="http://job.iteye.com/iteye">知识库</a>
    <a href="http://www.iteye.com/search">搜索</a>
  </div>
</div>

	      <div id="user_nav">
      <a href="/login" class="welcome" title="登录">您还未登录 !</a>
    <a href="/login">登录</a>
    <a href="/signup" class="nobg">注册</a>
  </div>

	    
    </div>

    <div id="page">
        <div id="branding" class="clearfix" style="overflow: hidden;background: none;padding:0 0 2px;">
        	<ins data-revive-zoneid="184" data-revive-id="8c38e720de1c90a6f6ff52f3f89c4d57"></ins>
        </div>
      <div id="branding" class="clearfix">
        <div id="blog_name">
          <h1><a href="/">quanminchaoren</a></h1>
        </div>
        <div id='fd'></div>
        <div id="blog_navbar">
          <ul>
            <li class='blog_navbar_for'><a href="http://quanminchaoren.iteye.com"><strong>博客</strong></a></li>
            <li ><a href="/weibo">微博</a></li>
            <li ><a href="/album">相册</a></li>
            <li ><a href="/link">收藏</a></li>
            <li ><a href="/blog/guest_book">留言</a></li>
            <li ><a href="/blog/profile">关于我</a></li>
          </ul>
    
          <div class="search">
            <form action="/blog/search" method="get">
              <input class="search_text" id="query" name="query" style="margin-left: 10px;width: 110px;" type="text" value="" />
              <input class="submit_search" type="submit" value="" />
            </form>
          </div> 
          <div id="fd"></div>         
        </div>
      </div>
      
      <div id="content" class="clearfix">
        <div id="main">
          



          


<div class="h-entry" style='display:none'>
  <a href="http://quanminchaoren.iteye.com" class="p-author" target="_blank">quanminchaoren</a>
</div>


<div class="blog_main">
  <div class="blog_title">
    <h3>
      <a href="/blog/840917">Android 编译大全</a>
      <em class="actions">      </em>
    </h3>
    <ul class='blog_categories'><strong>博客分类：</strong> <li><a href="/category/130059">Android源码开发</a></li> </ul>
        <div class='news_tag'><a href="http://www.iteye.com/blogs/tag/Android">Android</a><a href="http://www.iteye.com/blogs/tag/Java">Java</a><a href="http://www.iteye.com/blogs/tag/Linux">Linux</a><a href="http://www.iteye.com/blogs/tag/Git">Git</a><a href="http://www.iteye.com/blogs/tag/Flex">Flex</a>&nbsp;</div>
    	  
    	
    	
  		
      </div>

  <div id="blog_content" class="blog_content">
    <p>Android编译大全（一）<br>
1.  编译前的准备<br>
1.1. 编译环境准备<br><br>
v  先构建一个Ubuntu 9.10虚拟机<br><br>
v  在虚拟机中确认下面的包是否已经安装：<br><br>
n  sudo apt-get install build-essential<br><br>
n  sudo apt-get install make<br><br>
n  sudo apt-get install gcc<br><br>
n  sudo apt-get install g++<br><br>
n  sudo apt-get install libc6-dev<br><br>
n   sudo apt-get install flex<br><br>
n  sudo apt-get install bison<br><br>
n  sudo apt-get install patch<br><br>
n  sudo apt-get install texinfo<br><br>
n  sudo apt-get install libncurses-dev<br><br>
n  sudo apt-get install git-core gnupg  //(gnupg系统可能已自带)<br><br>
n  sudo apt-get install flex bison gperf libsdl-dev libesd0-dev libwxgtk2.6-dev build-essential zip curl<br><br>
n  sudo apt-get install ncurses-dev<br><br>
n  sudo apt-get install zlib1g-dev<br><br>
n  sudo apt-get install valgrind<br><br>
n  sudo apt-get install python2.5 (Ubuntu可能已经自带)<br><br>
n  sudo apt-get install sun-java5-jdk （Ubuntu9.10里面已经用1.6替换了1.5，需要重新下载一个1.5）<br><br>
 <br><br>
v  下载repo脚本，加上可执行权。<br><br>
n  $ curl http://android.git.kernel.org/repo &gt; repo<br><br>
n  $ sudo chmod a+x repo<br><br>
 <br><br>
注：本文档以Froyo版本为基础进行编译。<br>
1.2. Source code的获取<br><br>
v  在源码存放目录android中执行<br><br>
$ repo init -u git://codeaurora.org/platform/manifest.git -b carrot.cupcake<br><br>
-m M7201JSDCBALYA6380.xml<br><br>
就可以获得代码了<br><br>
 <br><br>
关于-b 和 -m参数的说明参见：<br><br>
https://www.codeaurora.org/wiki/QAEP<br><br>
 <br><br>
v  执行repo sync就可以开始下载源码了<br><br>
$ repo sync<br><br>
（漫长的过程，视速度而言需要半天以上）<br>
Android编译大全（二）<br>
2.  编译源代码<br><br>
v  执行ls -la /bin/sh命令，如果输出如下：<br><br>
rwxrwxrwx 1 root root 4 2010-02-10 17:14 /bin/sh -&gt; dash<br><br>
请执行$sudo dpkg-reconfigure dash命令修改sh版本，并选择“否”；<br><br>
此处如果不改好的话，编译时会出现错误。<br><br>
 <br><br>
v  执行source build/envsetup.sh命令<br><br>
v  执行choosecombo命令，出现选择对话框<br><br>
u  Build for the simulator or the device?<br><br>
u       1. Device<br><br>
u       2. Simulator<br><br>
u   <br><br>
u  Which would you like? [1]    <br><br>
u    <br><br>
u  Build type choices are:<br><br>
u       1. release<br><br>
u       2. debug<br><br>
u   <br><br>
u  Which would you like? [2]<br><br>
u   <br><br>
u  Product choices are:<br><br>
u       1. core<br><br>
u       2. full_dream<br><br>
u       3. full<br><br>
u       4. full_passion<br><br>
u       5. full_sapphire<br><br>
u       6. generic_dream<br><br>
u       7. generic<br><br>
u       8. generic_passion<br><br>
u       9. generic_sapphire<br><br>
u       10. msm7625_qrd<br><br>
u       11. msm7627_ffa<br><br>
u       12. msm7627_surf<br><br>
u       13. msm7630_surf<br><br>
u       14. qsd8250_ffa<br><br>
u       15. qsd8250_surf<br><br>
u       16. sample_addon<br><br>
u       17. sdk<br><br>
u       18. sim<br><br>
u  You can also type the name of a product if you know it.<br><br>
u  Which product would you like? [generic] 3<br><br>
u   <br><br>
u  Variant choices are:<br><br>
u       1. user<br><br>
u       2. userdebug<br><br>
u       3. eng<br><br>
u  Which would you like? [eng]<br><br>
 <br><br>
如果执行这个命令的时候，报错：/bin/sh: Syntax error: "(" unexpected<br><br>
#请执行$sudo dpkg-reconfigure dash命令，并选择“否”；<br><br>
 <br><br>
v  配置环境变量<br><br>
export JAVA_HOME=/usr/lib/jvm/java-5-sun<br><br>
export CLASSPATH=$JAVA_HOME/lib<br><br>
export JRE_HOME=$JAVA_HOME/jre<br><br>
export JAVA_PATH=$JAVA_HOME/bin:$JRE_HOME/bin<br><br>
export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:<br><br>
$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar<br><br>
export ANDROID_JAVA_HOME=$JAVA_HOME<br><br>
export PATH=$JAVA_PATH:$PATH<br><br>
 <br><br>
v  执行make命令<br><br>
如果安装的是java1.6，将报错，如下：<br><br>
Your version is: java version "1.6.0_15".<br><br>
The correct version is: 1.5.<br><br>
 <br><br>
解决java编译错误，如下：<br><br>
1)     下载jdk1.5（ftp://202.112.80.252/java/jdk-1_5_0_21-linux-i586.bin）；<br><br>
2)     将jdk-1_5_0_21-linux-i586.bin变为可执行权限<br><br>
$sudo chmod a+x jdk-1_5_0_21-linux-i586.bin<br><br>
3)     在命令行下执行./jdk-1_5_0_21-linux-i586.bin安装sdk<br><br>
4)     建立一个软连接到jdk目录<br><br>
$sudo ln jdk1.5.0_21/ java-5-sun -s<br><br>
5)     然后配置环境变量：sudo gedit/etc/enviroment在其中添加两行：<br><br>
CLASSPATH=/usr/lib/jvm/java-5-sun/lib<br><br>
JAVA_HOME=/usr/lib/jvm/java-5-sun<br><br>
 <br><br>
如果在出现类似使用了旧版api的错误，请先按照提示执行make update-api命令。该命令执行结束之后，再继续执行make命令就可以编译成功了。<br><br>
 <br><br>
在配置好shell命令类型之后，也可以新建一个shell脚本如下，进行自动编译：<br><br>
export JAVA_HOME=/usr/lib/jvm/java-5-sun<br><br>
export CLASSPATH=$JAVA_HOME/lib<br><br>
export JRE_HOME=$JAVA_HOME/jre<br><br>
export JAVA_PATH=$JAVA_HOME/bin:$JRE_HOME/bin<br><br>
export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar<br><br>
export ANDROID_JAVA_HOME=$JAVA_HOME<br><br>
export PATH=$JAVA_PATH:$PATH<br><br>
source build/envsetup.sh<br><br>
choosecombo 1 1 7 3<br><br>
make<br><br>
 <br><br>
 build之后的log如下：<br><br>
… …<br><br>
creating boot.img...<br><br>
creating recovery.img...<br><br>
creating system.img...<br><br>
creating userdata.img...<br><br>
cleaning up...<br><br>
Done.<br>
Android编译大全（三）<br>
3.  验证编译之后的模块<br><br>
$export ANDROID_PRODUCT_OUT=&lt;SrcDir&gt;/out/target/product/generic<br><br>
$cd ./out/host/linux-x86/bin<br><br>
$./emulator<br><br>
 <br><br>
 <br>
4.  编译完成之后的代码结构<br><br>
Android编译完成后，将在根目录中生成一个out文件夹，所有生成的内容均放置在这个文件夹中。out文件夹如下所示：<br>
　　out/<br>
　　|-- CaseCheck.txt<br>
　　|-- casecheck.txt<br>
　　|-- host<br>
　　|   |-- common<br>
　　|   `-- linux-x86<br>
　　`-- target<br>
　　    |-- common<br>
　　    `-- product<br><br>
    主要的两个目录为host和target，前者表示在主机（x86）生成的工具，后者表示目标机（模认为ARMv5）运行的内容。<br><br>
host目录的结构如下所示：<br>
　　out/host/<br>
　　|-- common<br>
　　|   `-- obj              （JAVA库）<br>
　　`-- linux-x86<br>
　　    |-- bin              （二进制程序）<br>
　　    |-- framework        （JAVA库,＊.jar文件）<br>
　　    |-- lib              （共享库*.so）<br>
　　    `-- obj              （中间生成的目标文件）<br>
　　host目录是一些在主机上用的工具，有一些是二进制程序,有一些是JAVA的程序。<br><br>
　　target目录的结构如下所示：<br>
　　out/target/<br>
　　|-- common<br>
　　|   |-- R           （资源文件）<br>
　　|   |-- docs<br>
　　|   `-- obj         （目标文件）<br>
　　`-- product<br>
　　    `-- generic<br>
　　其中common目录表示通用的内容，product中则是针对产品的内容。<br>
　　在common目录的obj中，包含两个重要的目录：<br>
　　APPS  中包含了JAVA应用程序生成的目标，每个应用程序对应其中一个子目录，将结合每个应用程序的原始文件生成Android应用程序的APK包。<br>
　　JAVA_LIBRARIES  中包含了JAVA的库，每个库对应其中一个子目录。<br><br>
　　在默认的情况下，Android编译将生成generic目录，如果选定产品还可以生成其他的目录。generic包含了以下内容：<br>
　　out/target/product/generic/<br>
　　|-- android-info.txt<br>
　　|-- clean_steps.mk<br>
　　|-- data<br>
　　|-- obj<br>
　　|-- ramdisk.img<br>
　　|-- root<br>
　　|-- symbols<br>
　　|-- system<br>
　　|-- system.img<br>
　　|-- userdata-qemu.img<br>
　　`-- userdata.img<br><br>
　　在generic/obj/APPS目录中包含了各种JAVA应用，与common/APPS相对应，但是已经打成了APK包。<br>
　　system目录是主要的文件系统，data目录是存放数据的文件系统。<br>
　　obj/SHARED_LIBRARIES中存放所有动态库。<br>
　　obj/STATIC_LIBRARIES中存放所有静态库。<br>
　　几个以img为结尾的文件是几个目标映像文件，其中ramdisk是作为内存盘的根文件系统映像，system.img是主要文件系统的映像，这是一个比较大的文件，data.img是数据内容映像。这几个image文件是运行时真正需要的文件。<br>
5.  make SDK<br>
5.1. sdk编译<br><br>
在编译完整个系统之后，再运行make sdk，就可以进行sdk的编译了。make sdk将各种工具和image打包，供开发和调试使用。<br><br>
export JAVA_HOME=/usr/lib/jvm/java-5-sun<br><br>
export CLASSPATH=$JAVA_HOME/lib<br><br>
export JRE_HOME=$JAVA_HOME/jre<br><br>
export JAVA_PATH=$JAVA_HOME/bin:$JRE_HOME/bin<br><br>
export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar<br><br>
export ANDROID_JAVA_HOME=$JAVA_HOME<br><br>
export PATH=$JAVA_PATH:$PATH<br><br>
 <br><br>
source build/envsetup.sh<br><br>
make sdk<br><br>
 <br><br>
 <br><br>
 <br><br>
……<br><br>
Package SDK Stubs: out/target/common/obj/PACKAGING/android_jar_intermediates/android.jar<br><br>
Package SDK: out/host/linux-x86/sdk/android-sdk_eng.huangjx_linux-x86.zip<br><br>
build之后的log如下：<br><br>
 <br>
5.2. 验证编译之后的模块<br><br>
将out/host/linux-x86/sdk/android-sdk_eng.huangjx_linux-x86.zip解压到本地目录。进入tools目录，输入下面的命令创建AVD：<br><br>
$./android create avd -t 1 -c 128M -n froyo -s HVGA<br><br>
Android 2.2 is a basic Android platform.<br><br>
Do you wish to create a custom hardware profile [no]<br><br>
Created AVD 'froyo' based on Android 2.2, with the following hardware config:<br><br>
hw.lcd.density=160<br><br>
输入下面的命令，启动模拟器：<br><br>
$ ./emulator -avd froyo -partition-size 160 &amp;<br>
Android编译大全（四）<br>
6.  编译详细分解<br>
6.1. build系统简介<br>
6.1.1.build系统文件结构<br><br>
./build<br><br>
|-- CleanSpec.mk<br><br>
|-- buildspec.mk.default<br><br>
|-- core<br><br>
|   |-- Makefile<br><br>
|   |-- apicheck_msg_current.txt<br><br>
|   |-- apicheck_msg_last.txt<br><br>
|   |-- armelf.x<br><br>
|   |-- armelf.xsc<br><br>
|   |-- armelflib.x<br><br>
|   |-- base_rules.mk<br><br>
|   |-- binary.mk<br><br>
|   |-- build-system.html<br><br>
|   |-- build_id.mk<br><br>
|   |-- checktree<br><br>
|   |-- cleanbuild.mk<br><br>
|   |-- cleanspec.mk<br><br>
|   |-- clear_vars.mk<br><br>
|   |-- combo<br><br>
|   |   |-- HOST_darwin-x86.mk<br><br>
|   |   |-- HOST_linux-x86.mk<br><br>
|   |   |-- HOST_windows-x86.mk<br><br>
|   |   |-- TARGET_linux-arm.mk<br><br>
|   |   |-- TARGET_linux-sh.mk<br><br>
|   |   |-- TARGET_linux-x86.mk<br><br>
|   |   |-- arch<br><br>
|   |   |   `-- arm<br><br>
|   |   |       |-- armv4t.mk<br><br>
|   |   |       |-- armv5te-vfp.mk<br><br>
|   |   |       |-- armv5te.mk<br><br>
|   |   |       |-- armv7-a-neon.mk<br><br>
|   |   |       `-- armv7-a.mk<br><br>
|   |   |-- javac.mk<br><br>
|   |   `-- select.mk<br><br>
|   |-- config.mk<br><br>
|   |-- copy_headers.mk<br><br>
|   |-- definitions.mk<br><br>
|   |-- device.mk<br><br>
|   |-- distdir.mk<br><br>
|   |-- droiddoc.mk<br><br>
|   |-- dynamic_binary.mk<br><br>
|   |-- envsetup.mk<br><br>
|   |-- executable.mk<br><br>
|   |-- filter_symbols.sh<br><br>
|   |-- find-jdk-tools-jar.sh<br><br>
|   |-- host_executable.mk<br><br>
|   |-- host_java_library.mk<br><br>
|   |-- host_prebuilt.mk<br><br>
|   |-- host_shared_library.mk<br><br>
|   |-- host_static_library.mk<br><br>
|   |-- java.mk<br><br>
|   |-- java_library.mk<br><br>
|   |-- key_char_map.mk<br><br>
|   |-- main.mk<br><br>
|   |-- multi_prebuilt.mk<br><br>
|   |-- node_fns.mk<br><br>
|   |-- notice_files.mk<br><br>
|   |-- package.mk<br><br>
|   |-- pathmap.mk<br><br>
|   |-- prebuilt.mk<br><br>
|   |-- prelink-linux-arm-2G.map<br><br>
|   |-- prelink-linux-arm.map<br><br>
|   |-- process_wrapper.sh<br><br>
|   |-- process_wrapper_gdb.cmds<br><br>
|   |-- process_wrapper_gdb.sh<br><br>
|   |-- product.mk<br><br>
|   |-- product_config.mk<br><br>
|   |-- proguard.flags<br><br>
|   |-- proguard_tests.flags<br><br>
|   |-- raw_executable.mk<br><br>
|   |-- raw_static_library.mk<br><br>
|   |-- root.mk<br><br>
|   |-- shared_library.mk<br><br>
|   |-- static_java_library.mk<br><br>
|   |-- static_library.mk<br><br>
|   |-- tasks<br><br>
|   |   |-- apicheck.mk<br><br>
|   |   |-- cts.mk<br><br>
|   |   |-- product-graph.mk<br><br>
|   |   `-- sdk-addon.mk<br><br>
|   `-- version_defaults.mk<br><br>
|-- envsetup.sh<br><br>
|-- libs<br><br>
|   `-- host<br><br>
|       |-- Android.mk<br><br>
|       |-- CopyFile.c<br><br>
|       |-- include<br><br>
|       |   `-- host<br><br>
|       |       |-- CopyFile.h<br><br>
|       |       |-- Directories.h<br><br>
|       |       `-- pseudolocalize.h<br><br>
|       |-- list.java<br><br>
|       `-- pseudolocalize.cpp<br><br>
|-- target<br><br>
|   |-- board<br><br>
|   |   |-- Android.mk<br><br>
|   |   |-- emulator<br><br>
|   |   |   |-- AndroidBoard.mk<br><br>
|   |   |   |-- BoardConfig.mk<br><br>
|   |   |   |-- README.txt<br><br>
|   |   |   |-- tuttle2.kcm<br><br>
|   |   |   `-- tuttle2.kl<br><br>
|   |   |-- generic<br><br>
|   |   |   |-- AndroidBoard.mk<br><br>
|   |   |   |-- BoardConfig.mk<br><br>
|   |   |   |-- README.txt<br><br>
|   |   |   |-- system.prop<br><br>
|   |   |   |-- tuttle2.kcm<br><br>
|   |   |   `-- tuttle2.kl<br><br>
|   |   `-- sim<br><br>
|   |       |-- AndroidBoard.mk<br><br>
|   |       `-- BoardConfig.mk<br><br>
|   `-- product<br><br>
|       |-- AndroidProducts.mk<br><br>
|       |-- core.mk<br><br>
|       |-- full.mk<br><br>
|       |-- generic.mk<br><br>
|       |-- languages_full.mk<br><br>
|       |-- languages_small.mk<br><br>
|       |-- sdk.mk<br><br>
|       |-- security<br><br>
|       |   |-- README<br><br>
|       |   |-- media.pk8<br><br>
|       |   |-- media.x509.pem<br><br>
|       |   |-- platform.pk8<br><br>
|       |   |-- platform.x509.pem<br><br>
|       |   |-- shared.pk8<br><br>
|       |   |-- shared.x509.pem<br><br>
|       |   |-- testkey.pk8<br><br>
|       |   `-- testkey.x509.pem<br><br>
|       `-- sim.mk<br>
Android编译大全（五）<br>
6.1.2.make文件分类<br><br>
²  配置类<br><br>
主要用来配置product、board，以及根据你的Host和Target选择相应的工具以及设定相应的通用编译选项：<br><br>
config文件<br>
    <br><br>
说明<br><br>
build/core/config.mk<br>
    <br><br>
Config文件的概括性配置<br><br>
build/core/envsetup.mk<br>
    <br><br>
generate目录构成等配置<br><br>
build/target/product<br>
    <br><br>
产品相关的配置<br><br>
build/target/board<br>
    <br><br>
硬件相关的配置<br><br>
build/core/combo<br>
    <br><br>
编译选项配置<br><br>
 <br><br>
这里解释下这里的board和product。board主要是设计到硬件芯片的配置，比如是否提供硬件的某些功能，比如说GPU等等，或者芯片支持浮点运算等等。product是指针对当前的芯片配置定义你将要生产产品的个性配置，主要是指APK方面的配置，哪些APK会包含在哪个product中，哪些APK在当前product中是不提供的。<br><br>
 <br><br>
config.mk是一个总括性的东西，它里面定义了各种module编译所需要使用的HOST工具以及如何来编译各种模块，比如说 BUILT_PREBUILT就定义了如何来编译预编译模块。envsetup.mk主要会读取由envsetup.sh写入环境变量中的一些变量来配置编译过程中的输出目录，combo里面主要定义了各种Host和Target结合的编译器和编译选项。<br><br>
 <br><br>
²  模块组织类<br><br>
这类文件主要定义了如何来处理Module的Android.mk，以及采用何种方式来生成目标模块，这些模块生成规则都定义在config.mk里面。我们可以看看：<br><br>
CLEAR_VARS:= $(BUILD_SYSTEM)/clear_vars.mk<br><br>
BUILD_HOST_STATIC_LIBRARY:=$(BUILD_SYSTEM)/host_static_library.mk<br><br>
BUILD_HOST_SHARED_LIBRARY:=$(BUILD_SYSTEM)/host_shared_library.mk<br><br>
      BUILD_STATIC_LIBRARY:=$(BUILD_SYSTEM)/static_library.mk<br><br>
      BUILD_RAW_STATIC_LIBRARY :=$(BUILD_SYSTEM)/raw_static_library.mk<br><br>
      BUILD_SHARED_LIBRARY:=$(BUILD_SYSTEM)/shared_library.mk<br><br>
      BUILD_EXECUTABLE:= $(BUILD_SYSTEM)/executable.mk<br><br>
      BUILD_RAW_EXECUTABLE:=$(BUILD_SYSTEM)/raw_executable.mk<br><br>
      BUILD_HOST_EXECUTABLE:=$(BUILD_SYSTEM)/host_executable.mk<br><br>
      BUILD_PACKAGE:= $(BUILD_SYSTEM)/package.mk<br><br>
      BUILD_HOST_PREBUILT:=$(BUILD_SYSTEM)/host_prebuilt.mk<br><br>
      BUILD_PREBUILT:= $(BUILD_SYSTEM)/prebuilt.mk<br><br>
      BUILD_MULTI_PREBUILT:=$(BUILD_SYSTEM)/multi_prebuilt.mk<br><br>
      BUILD_JAVA_LIBRARY:= $(BUILD_SYSTEM)/java_library.mk<br><br>
      BUILD_STATIC_JAVA_LIBRARY:=$(BUILD_SYSTEM)/static_java_library.mk<br><br>
      BUILD_HOST_JAVA_LIBRARY:=$(BUILD_SYSTEM)/host_java_library.mk<br><br>
      BUILD_DROIDDOC:= $(BUILD_SYSTEM)/droiddoc.mk<br><br>
      BUILD_COPY_HEADERS := $(BUILD_SYSTEM)/copy_headers.mk<br><br>
      BUILD_KEY_CHAR_MAP :=$(BUILD_SYSTEM)/key_char_map.mk     <br><br>
除了CLEAR_VARS是清楚本地变量之外，其他所有的都对应了一种模块的生成规则，每一个本地模块最后都会include其中的一种来生成目标模块。大部分上面的.mk都会包含base_rules.mk，这是对模块进行处理的基础文件，建议要写本地模块的都去看看，看明白了为什么 Android.mk要这么写就会大致明白了。<br><br>
²  单个模块编译类<br><br>
本地模块的Makefile文件就是我们在Android里面几乎上随处可见的Android.mk。Android进行编译的时候会通过下面的函数来遍历所有子目录中的Android.mk，一旦找到就不会再往层子目录继续寻找(所有你的模块定义的顶层Android.mk必须包含自己定义的子目录中的 Android.mk)。<br><br>
  subdir_makefiles += \<br><br>
         $(shellbuild/tools/findleaves.sh --prune="./out" $(subdirs) Android.mk)<br><br>
不同类型的本地模块具有不同的语法，但基本上是相通的，只有个别变量的不同，如何添加模块在前面的帖子已经说过了，大家可以参考。<br><br>
 <br><br>
Android通过LOCAL_MODULE_TAGS来决定哪些本地模块会不会编译进系统，通过PRODUCT和LOCAL_MODULE_TAGS来决定哪些应用包会编译进系统，如果用户不指定LOCAL_MODULE_TAGS，默认它的值是user。此外用户可以通过buildspec.mk来指定你需要编译进系统的模块。用户也可以通过mm来编译指定模块，或者通过make clean-module_name来删除指定模块。<br><br>
 <br><br>
²  系统生成类<br><br>
这主要指的是build/core/Makefile这个文件，它定义了生成各种img的方式，包括ramdisk.img   userdata.img system.img  update.zip  recover.img等。我们可以看看这些img都是如何生成的，对应着我们常用的几个make goals。<br><br>
 <br><br>
在实际的过程中，我们也可以自己编辑out目录下的生成文件，然后手工打包相应生成<br><br>
相应的img，最常用的是加入一些需要集成进的prebuilt file。所有的Makefile都通过build/core/main.mk这个文件组织在一起，它定义了一个默认goals：droid，当我们在TOP目录下敲Make实际上就等同于我们执行make droid。当Make include所有的文件，完成对所有make文件的解析以后就会寻找生成droid的规则，依次生成它的依赖，直到所有满足的模块被编译好，然后使用相应的工具打包成相应的img。<br>
Android编译大全（六）<br>
6.2. makefile文件<br><br>
控制整个android系统编译的make文件。其内容如下：<br><br>
### DO NOT EDIT THIS FILE ###<br><br>
include build/core/main.mk<br><br>
### DO NOT EDIT THIS FILE ###<br><br>
 <br><br>
可以看出，实际上控制编译的文件是：build/core/main.mk<br>
6.3. Make命令<br><br>
²  make droid：等同于make命令。droid是默认的目标名称。<br><br>
²  make all：  make all将make所有make droid会编译的项目。同时，将编译LOCAL_MODULE_TAGS定义的不包括android tag的模块。这将确保所有的在代码树里面同时有Android.mk文件的模块。<br><br>
²  clean-$(LOCAL_MODULE)和clean-$(LOCAL_PACKAGE_NAME)：<br><br>
删除某个模块的目标文件。例如：clean-libutils将删除所有的libutils.so以及和它相关的中间文件；clean-Home将删除Home应用。<br><br>
²  make clean：删除本次配置所编译输出的结果文件。类似于：rm –rf ./out/ &lt;configuration&gt;<br><br>
²  make clobber：删除所有配置所编译输出的结果文件。类似于：rm –rf ./out/<br><br>
²  make dataclean：make dataclean deletes contents of the data directory inside the current combo directory. This is especially useful on the simulator and emulator, where the persistent data remains present between builds.<br><br>
²  make showcommands：在编译的时候显示脚本的命令，而不是显示编译的简报。用于调试脚本。<br><br>
²  make LOCAL_MODULE：编译一个单独得模块（需要有Android.mk文件存在）。<br><br>
²  make targets：将输出所有拟可以编译的模块名称列表。<br><br>
 <br><br>
注：还有一些命令，从make文件里面应该可以找到。本文不做探讨。<br>
6.4. build/core/config.mk<br><br>
config.mk文件的主要内容如下：<br><br>
Ø  头文件的定义；（各种include文件夹的设定）<br><br>
在定义头文件的部分，还include了pathmap.mk，如下：<br><br>
include $(BUILD_SYSTEM)/pathmap.mk<br><br>
该文件设置include目录和frameworks/base下子目录等的信息。<br><br>
Ø  编译系统内部mk文件的定义； &lt;Build system internal files&gt;<br><br>
Ø  设定通用的名称；&lt;Set common values&gt;<br><br>
Ø  Include必要的子配置文件；&lt;Include sub-configuration files&gt;<br><br>
n  buildspec.mk<br><br>
n  envsetup.mk<br><br>
n  BoardConfig.mk<br><br>
n  /combo/select.mk<br><br>
n  /combo/javac.mk<br><br>
Ø  检查BUILD_ENV_SEQUENCE_NUMBER版本号；<br><br>
In order to make easier for people when the build system changes, when it is necessary to make changes to buildspec.mk or to rerun the environment setup scripts, they contain a version number in the variable BUILD_ENV_SEQUENCE_NUMBER. If this variable does not match what the build system expects, it fails printing an error message explaining what happened. If you make a change that requires an update, you need to update two places so this message will be printed.<br><br>
·         In config/envsetup.make, increment the CORRECT_BUILD_ENV_SEQUENCE_NUMBER definition.<br><br>
·         In buildspec.mk.default, update the BUILD_ENV_SEQUENCE_DUMBER definition to match the one in config/envsetup.make<br><br>
The scripts automatically get the value from the build system, so they will trigger the warning as well.<br><br>
Ø  设置常用工具的常量；&lt; Generic tools.&gt;<br><br>
Ø  设置目标选项；&lt; Set up final options.&gt;<br><br>
Ø  遍历并设置SDK版本；<br>
Android编译大全（七）<br>
6.5. buildspec.mk<br><br>
默认情况下，buildspec.mk文件是不存在的，表示使用的多少默认选项。Android只提供了buildspec.mk文件的模板文件build/buildspec.mk.default。如果需要使用buildspec.mk文件，请将该文件拷贝到&lt;srcDir&gt;根目录下面，并命名为buildspec.mk。同时，需要将模板文件里面的一些必要的配置项启用或者修改为你所需要的目标选项。<br><br>
 <br><br>
buildspec.mk文件主要配置下面的选项：<br><br>
Ø  TARGET_PRODUCT：设置编译之后的目标（产品）类型；<br><br>
可以设置的值在：build/target/product/中定义。比如，product目录下有下面几个mk文件：<br><br>
²  AndroidProducts.mk<br><br>
²  core.mk<br><br>
²  full.mk<br><br>
²  generic.mk<br><br>
²  languages_full.mk<br><br>
²  languages_small.mk<br><br>
²  sdk.mk<br><br>
²  sim.mk<br><br>
那么，在这里可以设置的值就为上面几个mk文件的前缀名称（generic等）。<br><br>
Ø  TARGET_BUILD_VARIANT：设置image的类型；<br><br>
包括三个选项：user、userdebug、eng。<br><br>
usr：                     出厂时候面向用户的image；<br><br>
userdebug：      打开了一些debug选项的image；<br><br>
eng：                  为了开发而包含了很多工具的image<br><br>
Ø  CUSTOM_MODULES：设置额外的总是会被安装到系统的模块；<br><br>
这里设置的模块名称采用的是简单目标名，比如：Browser或者MyApp等。这些名字在LOCAL_MODULE或者在LOCAL_PACKAGE_NAME里面定义的。<br><br>
LOCAL_MODULE is the name of what's supposed to be generated from your Android.mk. For exmample, for libkjs, the LOCAL_MODULE is "libkjs" (the build system adds the appropriate suffix -- .so .dylib .dll). For app modules, use LOCAL_PACKAGE_NAME instead of LOCAL_MODULE. We're planning on switching to ant for the apps, so this might become moot.<br><br>
Ø  TARGET_SIMULATOR：设置是否要编译成simulator &lt;true or false&gt;；<br><br>
Ø  TARGET_BUILD_TYPE：设置是debug还是release版本 &lt;release or debug&gt;；<br><br>
Set this to debug or release if you care.  Otherwise, it defaults to release for arm and debug for the simulator.<br><br>
Ø  HOST_BUILD_TYPE：设置Host目标是debug版还是release版；<br><br>
&lt;release or debug, default is debug&gt;<br><br>
Ø  DEBUG_MODULE_ModuleName：配置单个模块的版本是debug还是release；&lt;ture or false&gt;<br><br>
Ø  TARGET_TOOLS_PREFIX：工具名前缀，默认为NULL<br><br>
Ø  HOST_CUSTOM_DEBUG_CFLAGS/ TARGET_CUSTOM_DEBUG_CFLAGS：增加额外的编译选项LOCAL_CFLAGS。<br><br>
LOCAL_CFLAGS：If you have additional flags to pass into the C or C++ compiler, add them here. For example: LOCAL_CFLAGS += -DLIBUTILS_NATIVE=1<br><br>
Ø  CUSTOM_LOCALES：增加额外的LOCALES到最总的image；<br><br>
Any locales that appear in CUSTOM_LOCALES but not in the locale list for the selected product will be added to the end of PRODUCT_LOCALES.<br><br>
Ø  OUT_DIR：编译之后文件保存路径。默认为&lt;build-root&gt;/out目录；<br><br>
Ø  ADDITIONAL_BUILD_PROPERTIES：指定（增加）额外的属性文件；<br><br>
Ø  NO_FALLBACK_FONT：设置是否只支持英文（这将减少image的大小）。&lt;true, false&gt;<br><br>
Ø  WEBCORE_INSTRUMENTATION：webcore支持；<br><br>
Ø  ENABLE_SVG：SVG支持；<br><br>
Ø  BUILD_ENV_SEQUENCE_NUMBER：编译系列号；</p>
  </div>

  

  
  <ins data-revive-zoneid="171" data-revive-id="8c38e720de1c90a6f6ff52f3f89c4d57"></ins>
  

  <div id="bottoms" class="clearfix">
    
    <div id="share_weibo">分享到：
      <a data-type='sina' href="javascript:;" title="分享到新浪微博"><img src="/images/sina.jpg"></a>
      <a data-type='qq' href="javascript:;" title="分享到腾讯微博"><img src="/images/tec.jpg"></a>
    </div>
  </div>

  <div class="blog_nav">
    <div class="pre_next">
      <a href="/blog/840918" class="next" title="Android make脚本简记">Android make脚本简记</a>
      |
      <a href="/blog/840696" class="pre" title="Android building System分析">Android building System分析</a>
    </div>
  </div>
  <div class="blog_bottom">
    <ul>
      <li>2010-12-13 16:17</li>
      <li>浏览 6195</li>
      <li><a href="#comments">评论(0)</a></li>
      
      
      <li>分类:<a href="http://www.iteye.com/blogs/category/mobile">移动开发</a></li>      
      <li class='last'><a href="http://www.iteye.com/wiki/blog/840917" target="_blank" class="more">相关推荐</a></li>
    </ul>    
  </div>
  
		    
		
<div class="boutique-curr-box blog_comment">
	  <div class="boutique-curr clearfix">
	    <h5 class="h3titles">参考知识库</h5>
	    
	    <dl class="dlnewlist">
	    
          <dd><a target="_blank" href="http://lib.csdn.net/base/android"><img src="http://img.knowledge.csdn.net/upload/base/1455589744328_328.jpg" width="58" height="58" alt=""></a></dd>
          <dt>
              <a target="_blank" href="http://lib.csdn.net/base/android" classs="title">Android知识库</a>
              <span>
                 <em>16786</em>&nbsp;&nbsp;关注 <i>|</i> <em>1966</em>&nbsp;&nbsp;收录                  
              </span>
          </dt>
      
	    </dl>
	    
	  </div>
</div>
 		
      
  <div class="blog_comment">
    <h5>评论</h5>
    <a id="comments" name="comments"></a>
    
    
    
  </div>

  <div class="blog_comment">
    <h5>发表评论</h5>
            <p style="text-align:center; margin-top:30px;margin-bottom:0px;"><a href="/login" style="background-color:white;"> <img src="/images/login_icon.png" style="vertical-align:middle; margin-right: 10px;" /></a><a href="/login">  您还没有登录,请您登录后再发表评论 </a></p>
      </div>
</div>


<script type="text/javascript">
  dp.SyntaxHighlighter.HighlightAll('code', true, true);

  $$('#main .blog_content pre[name=code]').each(function(pre, index){ // blog content
    var post_id = 840917;
    var location = window.location;
    source_url = location.protocol + "//" + location.host + location.pathname + location.search;
    pre.writeAttribute('codeable_id', post_id);
    pre.writeAttribute('codeable_type', "Blog");
    pre.writeAttribute('source_url', source_url);
    pre.writeAttribute('pre_index', index);
    pre.writeAttribute('title', 'Android 编译大全');
  });

  fix_image_size($$('div.blog_content img'), 700);

  function processComment() {
    $$('#main .blog_comment > div').each(function(comment){// comment
      var post_id = comment.id.substr(2);
      $$("#"+comment.id+" pre[name=code]").each(function(pre, index){
        var location = window.location;
        source_url = location.protocol + "//" + location.host + location.pathname + location.search;
        source_url += "#" + comment.id;
        pre.writeAttribute('codeable_id', post_id);
        pre.writeAttribute('codeable_type', "BlogComment");
        pre.writeAttribute('source_url', source_url);
        pre.writeAttribute('pre_index', index);
        pre.writeAttribute('title', 'Android 编译大全');
      });
    });
  }

  function quote_comment(id) {
    new Ajax.Request('/editor/quote', {
      parameters: {'id':id, 'type':'BlogComment'},
      onSuccess:function(response){editor.bbcode_editor.textarea.insertAfterSelection(response.responseText);
        Element.scrollTo(editor.bbcode_editor.textarea.element);}
    });
  }

  code_favorites_init();
  processComment();
  new WeiboShare({share_buttons: $('share_weibo'), img_scope: $('blog_content')});
</script>




        </div>

        <div id="local">
          <div class="local_top"></div>
          <div id="blog_owner">
  <div id="blog_owner_logo"><a href='http://quanminchaoren.iteye.com'><img alt="quanminchaoren的博客" class="logo" src="http://www.iteye.com/upload/logo/user/777602/ef628606-7998-3148-acda-a4977ef4a494.jpg?1355216754" title="quanminchaoren的博客: quanminchaoren" width="" /></a></div>
  <div id="blog_owner_name">quanminchaoren</div>
</div>

          <div id="blog_actions">
            <ul>
              <li>浏览: 550200 次</li>
              <li>性别: <img alt="Icon_minigender_1" src="http://www.iteye.com/images/icon_minigender_1.gif?1448702469" title="男" /></li>
              <li>来自: 上海</li>
              <li><img src='/images/status/offline.gif'/></li>
              
            </ul>
          </div>
          <div id="user_visits" class="clearfix">
            <h5>最近访客 <span style='font-weight:normal;font-size:12px;padding-left:30px;'><a href="/blog/user_visits">更多访客&gt;&gt;</a></span></h5>
            
              <div class="user_visit">
                <div class="logo"><a href='http://867035777.iteye.com' target='_blank'><img alt="安心萨斯的博客" class="logo" src="http://www.iteye.com/images/user-logo-thumb.gif?1448702469" title="安心萨斯的博客: " width="48px" /></a></div>
                <div class="left"><a href='http://867035777.iteye.com' target='_blank' title='安心萨斯'>安心萨斯</a></div>
              </div>
            
              <div class="user_visit">
                <div class="logo"><a href='http://rover12421.iteye.com' target='_blank'><img alt="rover12421的博客" class="logo" src="http://www.iteye.com/images/user-logo-thumb.gif?1448702469" title="rover12421的博客: " width="48px" /></a></div>
                <div class="left"><a href='http://rover12421.iteye.com' target='_blank' title='rover12421'>rover12421</a></div>
              </div>
            
              <div class="user_visit">
                <div class="logo"><a href='http://chenyanmin9727.iteye.com' target='_blank'><img alt="chenyanmin9727的博客" class="logo" src="http://www.iteye.com/images/user-logo-thumb.gif?1448702469" title="chenyanmin9727的博客: " width="48px" /></a></div>
                <div class="left"><a href='http://chenyanmin9727.iteye.com' target='_blank' title='chenyanmin9727'>chenyanmin9727</a></div>
              </div>
            
              <div class="user_visit">
                <div class="logo"><a href='http://michaelhsuke.iteye.com' target='_blank'><img alt="michaelhsuke的博客" class="logo" src="http://www.iteye.com/images/user-logo-thumb.gif?1448702469" title="michaelhsuke的博客: " width="48px" /></a></div>
                <div class="left"><a href='http://michaelhsuke.iteye.com' target='_blank' title='michaelhsuke'>michaelhsuke</a></div>
              </div>
            
          </div>

          

                      <div id="blog_menu">
              <h5>文章分类</h5>
              <ul>
                <li><a href="/">全部博客 (189)</a></li>
                
                  <li><a href="/category/135872">Android应用开发 (63)</a></li>
                
                  <li><a href="/category/130059">Android源码开发 (82)</a></li>
                
                  <li><a href="/category/135873">Android基本常识 (21)</a></li>
                
                  <li><a href="/category/135267">ubuntu操作系统 (21)</a></li>
                
              </ul>
            </div>
            <div id='month_blogs'>
              <h5>社区版块</h5>
              <ul>
                <li><a href="/blog/news">我的资讯</a> (0)</li>
                <li>
                  <a href="/blog/post">我的论坛</a> (0)
                </li>
                <li><a href="/blog/answered_problems">我的问答</a> (0)</li>
              </ul>
            </div>
            <div id="month_blogs">
              <h5>存档分类</h5>
              <ul>
                
                  <li><a href="/blog/monthblog/2016-06">2016-06</a> (1)</li>
                
                  <li><a href="/blog/monthblog/2016-02">2016-02</a> (1)</li>
                
                  <li><a href="/blog/monthblog/2015-09">2015-09</a> (2)</li>
                
                <li><a href="/blog/monthblog_more">更多存档...</a></li>
              </ul>
            </div>
            
            

            <div id="guest_books">
              <h5>最新评论</h5>
              <ul>
                
                <li>
                  <a href='http://liu149339750.iteye.com' target='_blank' title='liu149339750'>liu149339750</a>： 
                  我勒个去，搜到你的博客了，关注！<br />
                  <a href="/blog/840918#bc2377140">Android make脚本简记</a>
                </li>
                
                <li>
                  <a href='http://ihopethatwell.iteye.com' target='_blank' title='ihopethatwell'>ihopethatwell</a>： 
                  楼主，这个修改时间有个问题，退出修改界面就不保存设置的时间了， ...<br />
                  <a href="/blog/838288#bc2332399">Android中如何修改系统时间（应用程序获得系统权限）</a>
                </li>
                
                <li>
                  <a href='http://flyar520.iteye.com' target='_blank' title='flyar520'>flyar520</a>： 
                  你好...我也遇到屏幕半屏刷成黑屏的问题...但是我的时在开机 ...<br />
                  <a href="/blog/1322031#bc2317479">Android横屏状态下返回到壁纸界面屏幕刷新问题</a>
                </li>
                
                <li>
                  <a href='http://flyar520.iteye.com' target='_blank' title='flyar520'>flyar520</a>： 
                  你好...我也遇到屏幕半屏刷成黑屏的问题...但是我的时在开机 ...<br />
                  <a href="/blog/1322031#bc2317455">Android横屏状态下返回到壁纸界面屏幕刷新问题</a>
                </li>
                
                <li>
                  <a href='http://andto.iteye.com' target='_blank' title='taowayi'>taowayi</a>： 
                  推荐android一键反编译神器 apkdec <br />
                  <a href="/blog/896745#bc2313421">Android apk反编译</a>
                </li>
                
              </ul>
            </div>

            <div class="local_bottom"></div>
          
        </div>
        <div style="margin-top: 10px;float: left;clear: left;">
					<ins data-revive-zoneid="185" data-revive-id="8c38e720de1c90a6f6ff52f3f89c4d57"></ins>
				</div>
      </div>    

      <div id="footer" class="clearfix">
        <div id="copyright">
          <hr/>
          声明：ITeye文章版权属于作者，受法律保护。没有作者书面许可不得转载。若作者同意转载，必须以超链接形式标明文章原始出处和作者。<br />
          &copy; 2003-2016 ITeye.com.   All rights reserved.  [ 京ICP证110151号  京公网安备110105010620 ]
        </div>
        <ins data-revive-zoneid="186" data-revive-id="8c38e720de1c90a6f6ff52f3f89c4d57"></ins>
      </div>
    </div>
    <script type="text/javascript">
  document.write("<img src='http://stat.iteye.com/?url="+ encodeURIComponent(document.location.href) + "&referrer=" + encodeURIComponent(document.referrer) + "&user_id=' width='0' height='0' />");
</script>

<script src="http://csdnimg.cn/pubfooter/js/tracking.js?version=20130923164150" type="text/javascript"></script>

    
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'zhengchaomin2008@gmail.com']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
      
    
    <script language="javascript" type="text/javascript" src="http://ads.csdn.net/js/async_new.js"></script>
<script src="http://c.csdnimg.cn/public/common/libs/jquery/jquery-1.11.1.min.js" type="text/javascript"></script>
<script type="text/javascript">var $csdn_iteye_jq = jQuery.noConflict();// 解决jq与prototype.js命名空间冲突的问题</script>
<script src="http://ads.csdn.net/js/tracking.js" type="text/javascript"></script>
    
	    
	    <script src="http://www.iteye.com/javascripts/web-storage-cache.min.js?1461122670" type="text/javascript"></script>
	    <script src="http://www.iteye.com/javascripts/replace.min.js?1464163307" type="text/javascript"></script>
    
    
  </body>
</html>
